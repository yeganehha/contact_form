<?php

class TP_yyToken implements ArrayAccess
{
    public $string   = '';
    public $metadata = array();

    public function __construct($s, $m = array())
    {
        if ($s instanceof TP_yyToken) {
            $this->string = $s->string;
            $this->metadata = $s->metadata;
        } else {
            $this->string = (string)$s;
            if ($m instanceof TP_yyToken) {
                $this->metadata = $m->metadata;
            } else if (is_array($m)) {
                $this->metadata = $m;
            }
        }
    }

    public function __toString()
    {
        return $this->string;
    }

    public function offsetExists($offset)
    {
        return isset($this->metadata[ $offset ]);
    }

    public function offsetGet($offset)
    {
        return $this->metadata[ $offset ];
    }

    public function offsetSet($offset, $value)
    {
        if ($offset === null) {
            if (isset($value[0])) {
                $x = ($value instanceof TP_yyToken) ? $value->metadata : $value;
                $this->metadata = array_merge($this->metadata, $x);

                return;
            }
            $offset = count($this->metadata);
        }
        if ($value === null) {
            return;
        }
        if ($value instanceof TP_yyToken) {
            if ($value->metadata) {
                $this->metadata[ $offset ] = $value->metadata;
            }
        } else if ($value) {
            $this->metadata[ $offset ] = $value;
        }
    }

    public function offsetUnset($offset)
    {
        unset($this->metadata[ $offset ]);
    }
}

class TP_yyStackEntry
{
    public $stateno;       /* The state-number */
    public $major;         /* The major token value.  This is the code
                     ** number for the token at this stack level */
    public $minor; /* The user-supplied minor token value.  This
                     ** is the value of the token  */
}

;


#line 11 "../smarty/lexer/smarty_internal_templateparser.y"

/**
 * Smarty Template Parser Class
 *
 * This is the template parser.
 * It is generated from the smarty_internal_templateparser.y file
 *
 * @author Uwe Tews <uwe.tews@googlemail.com>
 */
class Smarty_Internal_Templateparser
{
    #line 23 "../smarty/lexer/smarty_internal_templateparser.y"

    const Err1 = "Security error: Call to private object member not allowed";
    const Err2 = "Security error: Call to dynamic object member not allowed";
    const Err3 = "PHP in template not allowed. Use SmartyBC to enable it";
    const TP_VERT                   = 1;
    const TP_COLON                  = 2;
    const TP_UNIMATH                = 3;
    const TP_PHP                    = 4;
    const TP_TEXT                   = 5;
    const TP_STRIPON                = 6;
    const TP_STRIPOFF               = 7;
    const TP_LITERALSTART           = 8;
    const TP_LITERALEND             = 9;
    const TP_LITERAL                = 10;
    const TP_RDEL                   = 11;
    const TP_SIMPELOUTPUT           = 12;
    const TP_LDEL                   = 13;
    const TP_DOLLARID               = 14;
    const TP_EQUAL                  = 15;
    const TP_SIMPLETAG              = 16;
    const TP_ID                     = 17;
    const TP_PTR                    = 18;
    const TP_LDELMAKENOCACHE        = 19;
    const TP_LDELIF                 = 20;
    const TP_LDELFOR                = 21;
    const TP_SEMICOLON              = 22;
    const TP_INCDEC                 = 23;
    const TP_TO                     = 24;
    const TP_STEP                   = 25;
    const TP_LDELFOREACH            = 26;
    const TP_SPACE                  = 27;
    const TP_AS                     = 28;
    const TP_APTR                   = 29;
    const TP_LDELSETFILTER          = 30;
    const TP_SMARTYBLOCKCHILDPARENT = 31;
    const TP_CLOSETAG               = 32;
    const TP_LDELSLASH              = 33;
    const TP_ATTR                   = 34;
    const TP_INTEGER                = 35;
    const TP_COMMA                  = 36;
    const TP_OPENP                  = 37;
    const TP_CLOSEP                 = 38;
    const TP_MATH                   = 39;
    const TP_ISIN                   = 40;
    const TP_QMARK                  = 41;
    const TP_NOT                    = 42;
    const TP_TYPECAST               = 43;
    const TP_HEX                    = 44;
    const TP_DOT                    = 45;
    const TP_INSTANCEOF             = 46;
    const TP_SINGLEQUOTESTRING      = 47;
    const TP_DOUBLECOLON            = 48;
    const TP_NAMESPACE              = 49;
    const TP_AT                     = 50;
    const TP_HATCH                  = 51;
    const TP_OPENB                  = 52;
    const TP_CLOSEB                 = 53;
    const TP_DOLLAR                 = 54;
    const TP_LOGOP                  = 55;
    const TP_SLOGOP                 = 56;
    const TP_TLOGOP                 = 57;
    const TP_SINGLECOND             = 58;
    const TP_QUOTE                  = 59;
    const TP_BACKTICK               = 60;
    const YY_NO_ACTION              = 532;
    const YY_ACCEPT_ACTION          = 531;
    const YY_ERROR_ACTION           = 530;
    const YY_SZ_ACTTAB = 2144;
    const YY_SHIFT_USE_DFLT = -23;
    const YY_SHIFT_MAX      = 238;
    const YY_REDUCE_USE_DFLT = -94;
    const YY_REDUCE_MAX      = 192;
    const YYNOCODE      = 107;
    const YYSTACKDEPTH  = 500;
    const YYNSTATE      = 335;
    const YYNRULE       = 195;
    const YYERRORSYMBOL = 61;
    const YYERRSYMDT    = 'yy0';
    const YYFALLBACK    = 0;
    static public $yy_action    = array(42, 246, 20, 355, 290, 101, 18, 256, 19, 272, 8, 131, 279, 275, 80, 246, 230, 6,
                                        84, 11, 256, 19, 446, 116, 78, 279, 14, 225, 299, 257, 232, 326, 235, 446, 26,
                                        114, 459, 204, 78, 40, 43, 314, 234, 459, 310, 224, 212, 329, 82, 1, 42, 291,
                                        233, 209, 228, 125, 79, 113, 222, 272, 8, 132, 99, 275, 196, 145, 230, 6, 84,
                                        94, 320, 210, 323, 116, 289, 277, 214, 225, 270, 257, 232, 106, 205, 149, 26,
                                        278, 177, 267, 269, 40, 43, 314, 234, 190, 220, 237, 212, 137, 82, 1, 316, 291,
                                        42, 324, 9, 214, 79, 216, 202, 27, 106, 272, 8, 134, 293, 275, 208, 446, 230, 6,
                                        84, 287, 259, 260, 238, 116, 246, 233, 446, 225, 11, 257, 232, 204, 235, 39, 26,
                                        14, 11, 23, 101, 40, 43, 314, 234, 14, 310, 239, 212, 78, 82, 1, 42, 291, 256,
                                        19, 21, 197, 79, 279, 252, 272, 8, 136, 189, 275, 208, 137, 230, 6, 84, 44, 37,
                                        204, 9, 116, 29, 231, 245, 225, 141, 257, 232, 402, 235, 333, 12, 322, 308, 307,
                                        285, 40, 43, 314, 234, 204, 310, 291, 212, 402, 82, 1, 42, 291, 204, 402, 402,
                                        31, 79, 101, 101, 272, 8, 134, 399, 275, 208, 291, 230, 6, 84, 402, 154, 204,
                                        254, 116, 185, 298, 402, 225, 399, 257, 232, 204, 194, 39, 26, 399, 204, 114,
                                        114, 40, 43, 314, 234, 36, 310, 313, 212, 11, 82, 1, 42, 291, 204, 213, 14, 140,
                                        79, 120, 174, 272, 8, 134, 99, 275, 195, 147, 230, 6, 84, 44, 37, 475, 475, 116,
                                        289, 277, 475, 225, 92, 257, 232, 204, 211, 39, 26, 322, 308, 307, 285, 40, 43,
                                        314, 234, 189, 310, 291, 212, 2, 82, 1, 42, 291, 118, 250, 331, 175, 79, 120,
                                        109, 272, 8, 134, 99, 275, 193, 277, 230, 6, 84, 44, 37, 249, 246, 116, 289, 17,
                                        7, 225, 278, 257, 232, 204, 235, 39, 26, 322, 308, 307, 285, 40, 43, 314, 234,
                                        447, 310, 78, 212, 105, 82, 1, 42, 291, 182, 101, 447, 237, 79, 475, 475, 272,
                                        8, 135, 475, 275, 208, 296, 230, 6, 84, 44, 37, 204, 36, 116, 292, 136, 190,
                                        225, 221, 257, 232, 357, 235, 39, 26, 322, 308, 307, 285, 40, 43, 314, 234, 144,
                                        310, 475, 212, 11, 82, 1, 42, 291, 93, 277, 14, 36, 79, 311, 246, 272, 8, 134,
                                        82, 275, 199, 291, 230, 6, 84, 44, 37, 189, 244, 116, 184, 298, 5, 225, 242,
                                        257, 232, 78, 235, 181, 26, 322, 308, 307, 285, 40, 43, 314, 234, 297, 310, 306,
                                        212, 304, 82, 1, 42, 291, 233, 204, 446, 223, 79, 190, 280, 272, 8, 133, 218,
                                        275, 208, 446, 230, 6, 84, 214, 321, 217, 183, 116, 106, 227, 459, 225, 161,
                                        257, 232, 24, 235, 459, 4, 163, 85, 302, 277, 40, 43, 314, 234, 142, 310, 277,
                                        212, 91, 82, 1, 42, 291, 204, 277, 258, 243, 79, 268, 278, 272, 8, 136, 367,
                                        275, 208, 158, 230, 6, 84, 236, 106, 190, 15, 116, 186, 298, 304, 225, 11, 257,
                                        232, 233, 235, 35, 12, 14, 90, 139, 446, 40, 43, 314, 234, 179, 310, 291, 212,
                                        178, 82, 446, 95, 291, 41, 16, 327, 329, 79, 3, 165, 143, 233, 209, 204, 117,
                                        70, 113, 312, 190, 277, 277, 99, 190, 361, 240, 286, 166, 33, 291, 320, 210,
                                        323, 278, 289, 14, 157, 277, 180, 261, 263, 264, 265, 177, 203, 294, 277, 272,
                                        8, 172, 278, 275, 325, 148, 230, 6, 84, 475, 475, 127, 187, 116, 475, 459, 329,
                                        225, 146, 257, 232, 233, 209, 330, 117, 70, 113, 152, 277, 278, 127, 99, 204,
                                        38, 240, 286, 190, 176, 119, 320, 210, 323, 459, 289, 247, 459, 171, 475, 274,
                                        459, 329, 188, 317, 319, 284, 233, 209, 282, 122, 63, 103, 3, 217, 219, 248, 99,
                                        25, 20, 240, 286, 167, 256, 19, 320, 210, 323, 279, 289, 30, 329, 276, 110, 271,
                                        318, 233, 209, 11, 122, 67, 113, 256, 19, 83, 14, 99, 279, 237, 240, 286, 262,
                                        315, 288, 320, 210, 323, 11, 289, 160, 162, 329, 280, 273, 14, 206, 233, 209,
                                        168, 122, 67, 113, 254, 159, 38, 86, 99, 278, 169, 240, 286, 138, 303, 104, 320,
                                        210, 323, 88, 289, 272, 10, 305, 111, 275, 87, 201, 230, 6, 84, 266, 89, 303,
                                        303, 116, 303, 303, 329, 225, 303, 257, 232, 233, 209, 303, 122, 67, 113, 303,
                                        303, 303, 303, 99, 303, 303, 240, 286, 303, 303, 303, 320, 210, 323, 303, 289,
                                        303, 303, 300, 13, 303, 303, 207, 303, 272, 10, 305, 303, 275, 303, 303, 230, 6,
                                        84, 303, 303, 303, 303, 116, 303, 303, 329, 225, 303, 257, 232, 233, 209, 303,
                                        122, 47, 103, 303, 112, 303, 303, 99, 303, 303, 240, 286, 303, 303, 303, 320,
                                        210, 323, 303, 289, 329, 303, 301, 13, 303, 233, 209, 303, 108, 50, 113, 303,
                                        303, 303, 303, 99, 150, 303, 240, 286, 179, 303, 303, 320, 210, 323, 277, 289,
                                        329, 41, 16, 327, 303, 233, 209, 303, 122, 54, 113, 303, 303, 303, 303, 99, 190,
                                        303, 240, 286, 303, 303, 155, 320, 210, 323, 182, 289, 329, 303, 303, 303, 277,
                                        233, 209, 303, 122, 77, 113, 303, 303, 303, 303, 99, 156, 303, 240, 286, 179,
                                        303, 190, 320, 210, 323, 277, 289, 329, 41, 16, 327, 303, 233, 209, 303, 122,
                                        74, 113, 303, 303, 303, 303, 99, 190, 303, 240, 286, 303, 303, 303, 320, 210,
                                        323, 303, 289, 329, 303, 303, 303, 303, 233, 209, 303, 122, 49, 113, 303, 303,
                                        303, 303, 99, 170, 303, 240, 286, 179, 303, 303, 320, 210, 323, 277, 289, 329,
                                        41, 16, 327, 303, 233, 209, 303, 96, 53, 113, 303, 303, 303, 303, 99, 190, 303,
                                        240, 286, 303, 303, 303, 320, 210, 323, 303, 289, 329, 303, 303, 303, 303, 233,
                                        209, 303, 122, 60, 113, 303, 303, 303, 303, 99, 151, 303, 240, 286, 179, 303,
                                        303, 320, 210, 323, 277, 289, 329, 41, 16, 327, 303, 233, 209, 303, 122, 71,
                                        113, 303, 303, 303, 303, 99, 190, 303, 240, 286, 303, 303, 303, 320, 210, 323,
                                        303, 289, 329, 303, 303, 303, 303, 233, 198, 303, 115, 61, 113, 303, 303, 303,
                                        303, 99, 153, 303, 240, 286, 179, 303, 303, 320, 210, 323, 277, 289, 329, 41,
                                        16, 327, 303, 233, 97, 303, 81, 45, 107, 303, 303, 303, 303, 99, 190, 303, 240,
                                        286, 303, 303, 303, 320, 210, 323, 303, 289, 329, 303, 303, 303, 303, 233, 209,
                                        303, 122, 62, 113, 303, 303, 303, 303, 99, 164, 303, 240, 286, 179, 303, 303,
                                        320, 210, 323, 277, 289, 329, 41, 16, 327, 303, 233, 209, 303, 100, 69, 113,
                                        303, 303, 303, 303, 99, 190, 303, 240, 286, 303, 303, 303, 320, 210, 323, 303,
                                        289, 329, 303, 303, 303, 303, 233, 200, 303, 122, 58, 113, 303, 303, 303, 303,
                                        99, 303, 303, 240, 286, 303, 303, 303, 320, 210, 323, 303, 289, 329, 303, 303,
                                        303, 303, 233, 209, 303, 102, 68, 113, 303, 303, 303, 303, 99, 303, 303, 240,
                                        286, 303, 303, 303, 320, 210, 323, 303, 289, 329, 303, 303, 303, 303, 233, 209,
                                        303, 122, 55, 113, 303, 303, 303, 303, 99, 303, 303, 240, 286, 303, 303, 303,
                                        320, 210, 323, 303, 289, 329, 303, 303, 303, 303, 233, 209, 303, 122, 65, 113,
                                        303, 303, 303, 303, 99, 303, 303, 240, 286, 303, 303, 303, 320, 210, 323, 303,
                                        289, 329, 303, 303, 303, 303, 233, 209, 303, 122, 66, 113, 303, 303, 303, 303,
                                        99, 303, 303, 240, 286, 303, 303, 303, 320, 210, 323, 303, 289, 329, 303, 303,
                                        303, 303, 233, 209, 303, 122, 59, 113, 303, 303, 303, 303, 99, 303, 303, 240,
                                        286, 303, 303, 303, 320, 210, 323, 303, 289, 329, 303, 303, 303, 303, 233, 209,
                                        303, 122, 56, 113, 303, 303, 303, 303, 99, 303, 303, 240, 286, 303, 303, 303,
                                        320, 210, 323, 303, 289, 329, 303, 303, 303, 303, 233, 209, 303, 122, 75, 113,
                                        303, 303, 303, 303, 99, 303, 303, 240, 286, 303, 303, 303, 320, 210, 323, 303,
                                        289, 329, 303, 303, 303, 303, 233, 209, 303, 122, 51, 113, 303, 303, 303, 303,
                                        99, 303, 303, 240, 286, 303, 303, 303, 320, 210, 323, 303, 289, 329, 303, 303,
                                        303, 303, 233, 209, 303, 122, 72, 113, 303, 303, 303, 303, 99, 303, 303, 240,
                                        286, 303, 303, 303, 320, 210, 323, 303, 289, 329, 303, 303, 303, 303, 233, 209,
                                        303, 122, 63, 113, 303, 303, 303, 303, 99, 303, 303, 240, 286, 303, 303, 303,
                                        320, 210, 323, 303, 289, 329, 303, 303, 303, 303, 233, 209, 303, 122, 64, 113,
                                        303, 303, 303, 303, 99, 303, 303, 240, 286, 303, 303, 303, 320, 210, 323, 303,
                                        289, 329, 303, 303, 303, 303, 233, 209, 303, 122, 46, 113, 303, 303, 303, 303,
                                        99, 303, 303, 240, 286, 303, 303, 303, 320, 210, 323, 303, 289, 329, 303, 303,
                                        303, 303, 233, 98, 303, 81, 48, 107, 303, 303, 303, 303, 99, 303, 303, 240, 286,
                                        303, 303, 303, 320, 210, 323, 303, 289, 329, 303, 303, 303, 303, 233, 209, 303,
                                        122, 73, 113, 303, 303, 303, 303, 99, 303, 303, 240, 286, 303, 303, 303, 320,
                                        210, 323, 303, 289, 329, 303, 303, 303, 303, 233, 209, 303, 122, 57, 113, 303,
                                        303, 303, 303, 99, 303, 303, 240, 286, 303, 303, 303, 320, 210, 323, 303, 289,
                                        329, 303, 204, 303, 39, 233, 209, 303, 122, 76, 113, 136, 303, 303, 251, 99,
                                        303, 303, 240, 286, 303, 303, 303, 320, 210, 323, 28, 289, 11, 412, 412, 412,
                                        303, 303, 303, 14, 303, 329, 303, 303, 44, 37, 233, 209, 303, 124, 253, 113, 82,
                                        303, 303, 291, 99, 303, 303, 303, 322, 308, 307, 285, 320, 210, 323, 303, 289,
                                        446, 303, 412, 412, 303, 303, 303, 329, 303, 303, 303, 446, 233, 209, 204, 123,
                                        39, 113, 412, 412, 412, 412, 99, 303, 295, 303, 328, 303, 256, 19, 320, 210,
                                        323, 279, 289, 303, 329, 303, 303, 303, 11, 233, 209, 11, 130, 173, 113, 14,
                                        303, 303, 14, 99, 44, 37, 303, 281, 303, 303, 303, 320, 210, 323, 226, 289, 204,
                                        303, 39, 303, 322, 308, 307, 285, 475, 475, 303, 18, 303, 475, 459, 531, 52,
                                        334, 259, 260, 238, 303, 303, 233, 303, 303, 11, 303, 303, 303, 303, 303, 303,
                                        14, 303, 303, 303, 303, 44, 37, 303, 459, 303, 303, 459, 303, 475, 303, 459,
                                        303, 303, 303, 303, 329, 322, 308, 307, 285, 233, 209, 303, 121, 303, 113, 303,
                                        303, 303, 303, 99, 303, 303, 303, 303, 303, 303, 303, 320, 210, 323, 329, 289,
                                        226, 303, 303, 233, 209, 303, 128, 303, 113, 303, 475, 475, 303, 99, 303, 475,
                                        459, 303, 303, 303, 303, 320, 210, 323, 303, 289, 303, 303, 303, 329, 303, 303,
                                        303, 303, 233, 209, 303, 129, 303, 113, 303, 303, 303, 459, 99, 303, 459, 226,
                                        475, 303, 459, 332, 320, 210, 323, 303, 289, 475, 475, 303, 34, 329, 475, 459,
                                        303, 303, 233, 209, 204, 126, 39, 113, 204, 22, 39, 303, 99, 303, 191, 303, 204,
                                        303, 39, 303, 320, 210, 323, 303, 289, 303, 459, 303, 303, 459, 303, 475, 303,
                                        459, 303, 303, 303, 303, 303, 303, 303, 303, 44, 37, 303, 303, 44, 37, 204, 303,
                                        39, 303, 303, 229, 44, 37, 303, 303, 322, 308, 307, 285, 322, 308, 307, 285,
                                        406, 303, 303, 303, 322, 308, 307, 285, 204, 303, 39, 406, 303, 406, 303, 303,
                                        406, 303, 303, 309, 44, 37, 204, 406, 39, 406, 303, 406, 303, 303, 303, 303,
                                        283, 303, 237, 303, 322, 308, 307, 285, 303, 303, 303, 303, 303, 303, 44, 37,
                                        204, 303, 39, 303, 303, 303, 303, 303, 303, 303, 241, 303, 44, 37, 322, 308,
                                        307, 285, 303, 255, 303, 303, 303, 303, 303, 303, 303, 303, 322, 308, 307, 285,
                                        226, 303, 204, 303, 39, 303, 44, 37, 303, 303, 475, 475, 192, 303, 303, 475,
                                        459, 303, 32, 303, 303, 303, 322, 308, 307, 285, 303, 303, 475, 475, 303, 303,
                                        303, 475, 459, 303, 303, 303, 303, 303, 44, 37, 303, 459, 303, 303, 459, 303,
                                        475, 303, 459, 303, 303, 303, 303, 303, 322, 308, 307, 285, 303, 459, 303, 303,
                                        459, 303, 475, 303, 459, 400, 303, 303, 303, 215, 303, 303, 303, 303, 303, 303,
                                        303, 303, 303, 303, 303, 400, 303, 303, 303, 303, 303, 303, 400, 303, 303, 446,
                                        303, 303, 303, 303, 303, 303, 303, 303, 303, 303, 446,);
    static public $yy_lookahead = array(3, 23, 15, 11, 97, 18, 15, 12, 13, 12, 13, 14, 17, 16, 17, 23, 19, 20, 21, 27,
                                        12, 13, 37, 26, 46, 17, 34, 30, 31, 32, 33, 53, 35, 48, 37, 48, 45, 1, 46, 42,
                                        43, 44, 45, 52, 47, 50, 49, 65, 51, 52, 3, 54, 70, 71, 18, 73, 59, 75, 50, 12,
                                        13, 14, 80, 16, 17, 72, 19, 20, 21, 76, 88, 89, 90, 26, 92, 82, 75, 30, 77, 32,
                                        33, 80, 35, 93, 37, 95, 8, 9, 10, 42, 43, 44, 45, 100, 47, 45, 49, 45, 51, 52,
                                        53, 54, 3, 53, 52, 75, 59, 77, 78, 29, 80, 12, 13, 14, 11, 16, 17, 37, 19, 20,
                                        21, 64, 65, 66, 67, 26, 23, 70, 48, 30, 27, 32, 33, 1, 35, 3, 37, 34, 27, 15,
                                        18, 42, 43, 44, 45, 34, 47, 23, 49, 46, 51, 52, 3, 54, 12, 13, 13, 14, 59, 17,
                                        17, 12, 13, 14, 100, 16, 17, 45, 19, 20, 21, 39, 40, 1, 52, 26, 13, 14, 35, 30,
                                        17, 32, 33, 11, 35, 53, 37, 55, 56, 57, 58, 42, 43, 44, 45, 1, 47, 54, 49, 27,
                                        51, 52, 3, 54, 1, 11, 34, 15, 59, 18, 18, 12, 13, 14, 11, 16, 17, 54, 19, 20,
                                        21, 27, 28, 1, 94, 26, 96, 97, 34, 30, 27, 32, 33, 1, 35, 3, 37, 34, 1, 48, 48,
                                        42, 43, 44, 45, 36, 47, 38, 49, 27, 51, 52, 3, 54, 1, 71, 34, 14, 59, 75, 28,
                                        12, 13, 14, 80, 16, 17, 72, 19, 20, 21, 39, 40, 12, 13, 26, 92, 82, 17, 30, 37,
                                        32, 33, 1, 35, 3, 37, 55, 56, 57, 58, 42, 43, 44, 45, 100, 47, 54, 49, 37, 51,
                                        52, 3, 54, 22, 71, 53, 72, 59, 75, 48, 12, 13, 14, 80, 16, 17, 82, 19, 20, 21,
                                        39, 40, 89, 23, 26, 92, 15, 37, 30, 95, 32, 33, 1, 35, 3, 37, 55, 56, 57, 58,
                                        42, 43, 44, 45, 37, 47, 46, 49, 80, 51, 52, 3, 54, 76, 18, 48, 45, 59, 12, 13,
                                        12, 13, 14, 17, 16, 17, 98, 19, 20, 21, 39, 40, 1, 36, 26, 38, 14, 100, 30, 17,
                                        32, 33, 11, 35, 3, 37, 55, 56, 57, 58, 42, 43, 44, 45, 72, 47, 50, 49, 27, 51,
                                        52, 3, 54, 93, 82, 34, 36, 59, 38, 23, 12, 13, 14, 51, 16, 17, 54, 19, 20, 21,
                                        39, 40, 100, 17, 26, 96, 97, 36, 30, 17, 32, 33, 46, 35, 76, 37, 55, 56, 57, 58,
                                        42, 43, 44, 45, 53, 47, 60, 49, 65, 51, 52, 3, 54, 70, 1, 37, 50, 59, 100, 101,
                                        12, 13, 14, 45, 16, 17, 48, 19, 20, 21, 75, 53, 77, 14, 26, 80, 17, 45, 30, 72,
                                        32, 33, 29, 35, 52, 37, 72, 104, 105, 82, 42, 43, 44, 45, 72, 47, 82, 49, 76,
                                        51, 52, 3, 54, 1, 82, 66, 14, 59, 69, 95, 12, 13, 14, 11, 16, 17, 75, 19, 20,
                                        21, 18, 80, 100, 22, 26, 96, 97, 65, 30, 27, 32, 33, 70, 35, 13, 37, 34, 36, 14,
                                        37, 42, 43, 44, 45, 76, 47, 54, 49, 76, 51, 48, 81, 54, 85, 86, 87, 65, 59, 37,
                                        72, 72, 70, 71, 1, 73, 74, 75, 105, 100, 82, 82, 80, 100, 11, 83, 84, 72, 27,
                                        54, 88, 89, 90, 95, 92, 34, 72, 82, 81, 4, 5, 6, 7, 8, 102, 103, 82, 12, 13, 93,
                                        95, 16, 91, 93, 19, 20, 21, 12, 13, 98, 76, 26, 17, 18, 65, 30, 72, 32, 33, 70,
                                        71, 91, 73, 74, 75, 93, 82, 95, 98, 80, 1, 2, 83, 84, 100, 81, 17, 88, 89, 90,
                                        45, 92, 17, 48, 51, 50, 38, 52, 65, 17, 53, 53, 103, 70, 71, 17, 73, 74, 75, 37,
                                        77, 17, 17, 80, 24, 15, 83, 84, 51, 12, 13, 88, 89, 90, 17, 92, 41, 65, 14, 17,
                                        11, 35, 70, 71, 27, 73, 74, 75, 12, 13, 17, 34, 80, 17, 45, 83, 84, 5, 35, 17,
                                        88, 89, 90, 27, 92, 29, 93, 65, 101, 82, 34, 99, 70, 71, 93, 73, 74, 75, 94, 93,
                                        2, 80, 80, 95, 93, 83, 84, 80, 5, 68, 88, 89, 90, 80, 92, 12, 13, 14, 79, 16,
                                        80, 99, 19, 20, 21, 9, 80, 106, 106, 26, 106, 106, 65, 30, 106, 32, 33, 70, 71,
                                        106, 73, 74, 75, 106, 106, 106, 106, 80, 106, 106, 83, 84, 106, 106, 106, 88,
                                        89, 90, 106, 92, 106, 5, 59, 60, 106, 106, 99, 106, 12, 13, 14, 106, 16, 106,
                                        106, 19, 20, 21, 106, 106, 106, 106, 26, 106, 106, 65, 30, 106, 32, 33, 70, 71,
                                        106, 73, 74, 75, 106, 77, 106, 106, 80, 106, 106, 83, 84, 106, 106, 106, 88, 89,
                                        90, 106, 92, 65, 106, 59, 60, 106, 70, 71, 106, 73, 74, 75, 106, 106, 106, 106,
                                        80, 72, 106, 83, 84, 76, 106, 106, 88, 89, 90, 82, 92, 65, 85, 86, 87, 106, 70,
                                        71, 106, 73, 74, 75, 106, 106, 106, 106, 80, 100, 106, 83, 84, 106, 106, 72, 88,
                                        89, 90, 76, 92, 65, 106, 106, 106, 82, 70, 71, 106, 73, 74, 75, 106, 106, 106,
                                        106, 80, 72, 106, 83, 84, 76, 106, 100, 88, 89, 90, 82, 92, 65, 85, 86, 87, 106,
                                        70, 71, 106, 73, 74, 75, 106, 106, 106, 106, 80, 100, 106, 83, 84, 106, 106,
                                        106, 88, 89, 90, 106, 92, 65, 106, 106, 106, 106, 70, 71, 106, 73, 74, 75, 106,
                                        106, 106, 106, 80, 72, 106, 83, 84, 76, 106, 106, 88, 89, 90, 82, 92, 65, 85,
                                        86, 87, 106, 70, 71, 106, 73, 74, 75, 106, 106, 106, 106, 80, 100, 106, 83, 84,
                                        106, 106, 106, 88, 89, 90, 106, 92, 65, 106, 106, 106, 106, 70, 71, 106, 73, 74,
                                        75, 106, 106, 106, 106, 80, 72, 106, 83, 84, 76, 106, 106, 88, 89, 90, 82, 92,
                                        65, 85, 86, 87, 106, 70, 71, 106, 73, 74, 75, 106, 106, 106, 106, 80, 100, 106,
                                        83, 84, 106, 106, 106, 88, 89, 90, 106, 92, 65, 106, 106, 106, 106, 70, 71, 106,
                                        73, 74, 75, 106, 106, 106, 106, 80, 72, 106, 83, 84, 76, 106, 106, 88, 89, 90,
                                        82, 92, 65, 85, 86, 87, 106, 70, 71, 106, 73, 74, 75, 106, 106, 106, 106, 80,
                                        100, 106, 83, 84, 106, 106, 106, 88, 89, 90, 106, 92, 65, 106, 106, 106, 106,
                                        70, 71, 106, 73, 74, 75, 106, 106, 106, 106, 80, 72, 106, 83, 84, 76, 106, 106,
                                        88, 89, 90, 82, 92, 65, 85, 86, 87, 106, 70, 71, 106, 73, 74, 75, 106, 106, 106,
                                        106, 80, 100, 106, 83, 84, 106, 106, 106, 88, 89, 90, 106, 92, 65, 106, 106,
                                        106, 106, 70, 71, 106, 73, 74, 75, 106, 106, 106, 106, 80, 106, 106, 83, 84,
                                        106, 106, 106, 88, 89, 90, 106, 92, 65, 106, 106, 106, 106, 70, 71, 106, 73, 74,
                                        75, 106, 106, 106, 106, 80, 106, 106, 83, 84, 106, 106, 106, 88, 89, 90, 106,
                                        92, 65, 106, 106, 106, 106, 70, 71, 106, 73, 74, 75, 106, 106, 106, 106, 80,
                                        106, 106, 83, 84, 106, 106, 106, 88, 89, 90, 106, 92, 65, 106, 106, 106, 106,
                                        70, 71, 106, 73, 74, 75, 106, 106, 106, 106, 80, 106, 106, 83, 84, 106, 106,
                                        106, 88, 89, 90, 106, 92, 65, 106, 106, 106, 106, 70, 71, 106, 73, 74, 75, 106,
                                        106, 106, 106, 80, 106, 106, 83, 84, 106, 106, 106, 88, 89, 90, 106, 92, 65,
                                        106, 106, 106, 106, 70, 71, 106, 73, 74, 75, 106, 106, 106, 106, 80, 106, 106,
                                        83, 84, 106, 106, 106, 88, 89, 90, 106, 92, 65, 106, 106, 106, 106, 70, 71, 106,
                                        73, 74, 75, 106, 106, 106, 106, 80, 106, 106, 83, 84, 106, 106, 106, 88, 89, 90,
                                        106, 92, 65, 106, 106, 106, 106, 70, 71, 106, 73, 74, 75, 106, 106, 106, 106,
                                        80, 106, 106, 83, 84, 106, 106, 106, 88, 89, 90, 106, 92, 65, 106, 106, 106,
                                        106, 70, 71, 106, 73, 74, 75, 106, 106, 106, 106, 80, 106, 106, 83, 84, 106,
                                        106, 106, 88, 89, 90, 106, 92, 65, 106, 106, 106, 106, 70, 71, 106, 73, 74, 75,
                                        106, 106, 106, 106, 80, 106, 106, 83, 84, 106, 106, 106, 88, 89, 90, 106, 92,
                                        65, 106, 106, 106, 106, 70, 71, 106, 73, 74, 75, 106, 106, 106, 106, 80, 106,
                                        106, 83, 84, 106, 106, 106, 88, 89, 90, 106, 92, 65, 106, 106, 106, 106, 70, 71,
                                        106, 73, 74, 75, 106, 106, 106, 106, 80, 106, 106, 83, 84, 106, 106, 106, 88,
                                        89, 90, 106, 92, 65, 106, 106, 106, 106, 70, 71, 106, 73, 74, 75, 106, 106, 106,
                                        106, 80, 106, 106, 83, 84, 106, 106, 106, 88, 89, 90, 106, 92, 65, 106, 106,
                                        106, 106, 70, 71, 106, 73, 74, 75, 106, 106, 106, 106, 80, 106, 106, 83, 84,
                                        106, 106, 106, 88, 89, 90, 106, 92, 65, 106, 106, 106, 106, 70, 71, 106, 73, 74,
                                        75, 106, 106, 106, 106, 80, 106, 106, 83, 84, 106, 106, 106, 88, 89, 90, 106,
                                        92, 65, 106, 106, 106, 106, 70, 71, 106, 73, 74, 75, 106, 106, 106, 106, 80,
                                        106, 106, 83, 84, 106, 106, 106, 88, 89, 90, 106, 92, 65, 106, 1, 106, 3, 70,
                                        71, 106, 73, 74, 75, 14, 106, 106, 17, 80, 106, 106, 83, 84, 106, 106, 106, 88,
                                        89, 90, 25, 92, 27, 1, 2, 3, 106, 106, 106, 34, 106, 65, 106, 106, 39, 40, 70,
                                        71, 106, 73, 49, 75, 51, 106, 106, 54, 80, 106, 106, 106, 55, 56, 57, 58, 88,
                                        89, 90, 106, 92, 37, 106, 39, 40, 106, 106, 106, 65, 106, 106, 106, 48, 70, 71,
                                        1, 73, 3, 75, 55, 56, 57, 58, 80, 106, 11, 106, 84, 106, 12, 13, 88, 89, 90, 17,
                                        92, 106, 65, 106, 106, 106, 27, 70, 71, 27, 73, 29, 75, 34, 106, 106, 34, 80,
                                        39, 40, 106, 84, 106, 106, 106, 88, 89, 90, 2, 92, 1, 106, 3, 106, 55, 56, 57,
                                        58, 12, 13, 106, 15, 106, 17, 18, 62, 63, 64, 65, 66, 67, 106, 106, 70, 106,
                                        106, 27, 106, 106, 106, 106, 106, 106, 34, 106, 106, 106, 106, 39, 40, 106, 45,
                                        106, 106, 48, 106, 50, 106, 52, 106, 106, 106, 106, 65, 55, 56, 57, 58, 70, 71,
                                        106, 73, 106, 75, 106, 106, 106, 106, 80, 106, 106, 106, 106, 106, 106, 106, 88,
                                        89, 90, 65, 92, 2, 106, 106, 70, 71, 106, 73, 106, 75, 106, 12, 13, 106, 80,
                                        106, 17, 18, 106, 106, 106, 106, 88, 89, 90, 106, 92, 106, 106, 106, 65, 106,
                                        106, 106, 106, 70, 71, 106, 73, 106, 75, 106, 106, 106, 45, 80, 106, 48, 2, 50,
                                        106, 52, 53, 88, 89, 90, 106, 92, 12, 13, 106, 15, 65, 17, 18, 106, 106, 70, 71,
                                        1, 73, 3, 75, 1, 2, 3, 106, 80, 106, 11, 106, 1, 106, 3, 106, 88, 89, 90, 106,
                                        92, 106, 45, 106, 106, 48, 106, 50, 106, 52, 106, 106, 106, 106, 106, 106, 106,
                                        106, 39, 40, 106, 106, 39, 40, 1, 106, 3, 106, 106, 38, 39, 40, 106, 106, 55,
                                        56, 57, 58, 55, 56, 57, 58, 11, 106, 106, 106, 55, 56, 57, 58, 1, 106, 3, 22,
                                        106, 24, 106, 106, 27, 106, 106, 38, 39, 40, 1, 34, 3, 36, 106, 38, 106, 106,
                                        106, 106, 11, 106, 45, 106, 55, 56, 57, 58, 106, 106, 106, 106, 106, 106, 39,
                                        40, 1, 106, 3, 106, 106, 106, 106, 106, 106, 106, 11, 106, 39, 40, 55, 56, 57,
                                        58, 106, 60, 106, 106, 106, 106, 106, 106, 106, 106, 55, 56, 57, 58, 2, 106, 1,
                                        106, 3, 106, 39, 40, 106, 106, 12, 13, 11, 106, 106, 17, 18, 106, 2, 106, 106,
                                        106, 55, 56, 57, 58, 106, 106, 12, 13, 106, 106, 106, 17, 18, 106, 106, 106,
                                        106, 106, 39, 40, 106, 45, 106, 106, 48, 106, 50, 106, 52, 106, 106, 106, 106,
                                        106, 55, 56, 57, 58, 106, 45, 106, 106, 48, 106, 50, 106, 52, 11, 106, 106, 106,
                                        15, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 27, 106, 106, 106,
                                        106, 106, 106, 34, 106, 106, 37, 106, 106, 106, 106, 106, 106, 106, 106, 106,
                                        106, 48,);
    static public $yy_shift_ofst = array(585, 399, 99, 99, 449, 399, 449, 99, -3, 47, -3, 249, 99, 99, 99, 99, 99, 99,
                                         199, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 349, 99, 299, 249, 99, 99, 99,
                                         149, 149, 499, 499, 499, 499, 499, 499, 1695, 1618, 1745, 1745, 1745, 1745,
                                         1745, 585, 232, 2038, 282, 2004, 1978, 1964, 1938, 1898, 132, 1894, 1906, 332,
                                         332, 332, 332, 332, 332, 332, 332, 332, 332, 332, 332, 382, 382, 1614, 723,
                                         503, 372, 363, 222, 243, 776, 1698, 676, 657, 657, 243, 222, 243, 122, 222,
                                         629, 194, 103, -8, 8, 172, 163, 203, -13, 78, 142, 142, 192, 563, 460, 36, 111,
                                         111, 191, 460, 253, 551, 454, 525, 237, 337, 237, 237, 237, 237, 237, 237, 337,
                                         -23, -23, -23, 1872, 1825, 1742, 2035, 2053, 595, 143, -5, 261, -9, 522, 111,
                                         111, 111, 111, 111, 111, 52, 52, 111, 111, 52, 111, 493, 111, 111, 111, 124,
                                         52, 493, 111, 52, 111, 111, 111, 111, 433, 52, 52, 111, 433, 52, 493, 493, 111,
                                         718, 736, 237, 237, 718, 237, 237, 291, 337, 337, 337, 237, -23, -23, -23, -23,
                                         -23, 1645, 1946, 2095, 419, 347, -22, 80, 387, 371, 502, 392, 407, 50, 338,
                                         209, -15, 301, 262, 312, 308, 617, 650, 645, 640, 608, 644, 598, 597, 593, 682,
                                         413, 625, 632, 638, 622, 619, 635, 664, 291, 662, 669, 646, 649, 673, 663,
                                         692,);
    static public $yy_reduce_ofst   = array(1699, 492, 687, 642, 583, 549, 740, 612, 1468, 992, 1020, 1076, 1244, 1104,
                                            1132, 1160, 1188, 1216, 964, 1272, 1412, 1524, 1552, 1496, 1300, 1440, 1384,
                                            1356, 1328, 1048, 936, 880, 824, 908, 768, 796, 852, 1624, 1653, 1791, -18,
                                            1734, 1760, 1589, 1823, 1001, 889, 1057, 1001, 945, 777, 833, 57, 469, 469,
                                            469, 469, 469, 469, 469, 469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
                                            469, 469, 469, 469, 469, 469, 469, 469, 234, 384, 423, 811, 184, -7, 30,
                                            463, 505, 488, 415, 235, 1, 195, 396, 130, 323, 359, 278, 408, 408, -10,
                                            278, 269, 278, 330, 440, 532, -10, 330, 278, 530, 534, 544, 514, 330, 511,
                                            278, 489, 278, 442, 473, 330, 278, 278, 278, 278, 278, 278, 430, 278, 278,
                                            278, 621, 621, 621, 621, 621, 621, 647, 628, 621, 621, 626, 627, 627, 627,
                                            627, 627, 627, 624, 624, 627, 627, 624, 627, 641, 627, 627, 627, 659, 624,
                                            666, 627, 624, 627, 627, 627, 627, 613, 624, 624, 627, 631, 624, 653, 660,
                                            627, 607, 661, 64, 64, 607, 64, 64, 311, -93, -93, -93, 64, 471, 554, 507,
                                            506, 510,);
    static public $yyExpectedTokens = array(array(4, 5, 6, 7, 8, 12, 13, 16, 19, 20, 21, 26, 30, 32, 33,),
                                            array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44,
                                                  45, 47, 49, 51, 52, 54, 59,),
                                            array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44,
                                                  45, 47, 49, 51, 52, 54, 59,),
                                            array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44,
                                                  45, 47, 49, 51, 52, 54, 59,),
                                            array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44,
                                                  45, 47, 49, 51, 52, 54, 59,),
                                            array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44,
                                                  45, 47, 49, 51, 52, 54, 59,),
                                            array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44,
                                                  45, 47, 49, 51, 52, 54, 59,),
                                            array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44,
                                                  45, 47, 49, 51, 52, 54, 59,),
                                            array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 31, 32, 33, 35, 37, 42, 43,
                                                  44, 45, 47, 49, 51, 52, 54, 59,),
                                            array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44,
                                                  45, 47, 49, 51, 52, 53, 54, 59,),
                                            array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 31, 32, 33, 35, 37, 42, 43,
                                                  44, 45, 47, 49, 51, 52, 54, 59,),
                                            array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44,
                                                  45, 47, 49, 51, 52, 54, 59,),
                                            array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44,
                                                  45, 47, 49, 51, 52, 54, 59,),
                                            array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44,
                                                  45, 47, 49, 51, 52, 54, 59,),
                                            array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44,
                                                  45, 47, 49, 51, 52, 54, 59,),
                                            array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44,
                                                  45, 47, 49, 51, 52, 54, 59,),
                                            array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44,
                                                  45, 47, 49, 51, 52, 54, 59,),
                                            array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44,
                                                  45, 47, 49, 51, 52, 54, 59,),
                                            array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44,
                                                  45, 47, 49, 51, 52, 54, 59,),
                                            array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44,
                                                  45, 47, 49, 51, 52, 54, 59,),
                                            array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44,
                                                  45, 47, 49, 51, 52, 54, 59,),
                                            array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44,
                                                  45, 47, 49, 51, 52, 54, 59,),
                                            array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44,
                                                  45, 47, 49, 51, 52, 54, 59,),
                                            array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44,
                                                  45, 47, 49, 51, 52, 54, 59,),
                                            array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44,
                                                  45, 47, 49, 51, 52, 54, 59,),
                                            array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44,
                                                  45, 47, 49, 51, 52, 54, 59,),
                                            array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44,
                                                  45, 47, 49, 51, 52, 54, 59,),
                                            array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44,
                                                  45, 47, 49, 51, 52, 54, 59,),
                                            array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44,
                                                  45, 47, 49, 51, 52, 54, 59,),
                                            array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44,
                                                  45, 47, 49, 51, 52, 54, 59,),
                                            array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44,
                                                  45, 47, 49, 51, 52, 54, 59,),
                                            array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44,
                                                  45, 47, 49, 51, 52, 54, 59,),
                                            array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44,
                                                  45, 47, 49, 51, 52, 54, 59,),
                                            array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44,
                                                  45, 47, 49, 51, 52, 54, 59,),
                                            array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44,
                                                  45, 47, 49, 51, 52, 54, 59,),
                                            array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44,
                                                  45, 47, 49, 51, 52, 54, 59,),
                                            array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44,
                                                  45, 47, 49, 51, 52, 54, 59,),
                                            array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44,
                                                  45, 47, 49, 51, 52, 54, 59,),
                                            array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44,
                                                  45, 47, 49, 51, 52, 54, 59,),
                                            array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44,
                                                  45, 47, 49, 51, 54, 59,),
                                            array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44,
                                                  45, 47, 49, 51, 54, 59,),
                                            array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44,
                                                  45, 47, 49, 51, 54, 59,),
                                            array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44,
                                                  45, 47, 49, 51, 54, 59,),
                                            array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44,
                                                  45, 47, 49, 51, 54, 59,),
                                            array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44,
                                                  45, 47, 49, 51, 54, 59,),
                                            array(1, 3, 11, 27, 34, 39, 40, 55, 56, 57, 58,),
                                            array(1, 3, 25, 27, 34, 39, 40, 55, 56, 57, 58,),
                                            array(1, 3, 27, 34, 39, 40, 55, 56, 57, 58,),
                                            array(1, 3, 27, 34, 39, 40, 55, 56, 57, 58,),
                                            array(1, 3, 27, 34, 39, 40, 55, 56, 57, 58,),
                                            array(1, 3, 27, 34, 39, 40, 55, 56, 57, 58,),
                                            array(1, 3, 27, 34, 39, 40, 55, 56, 57, 58,),
                                            array(4, 5, 6, 7, 8, 12, 13, 16, 19, 20, 21, 26, 30, 32, 33,),
                                            array(1, 3, 28, 39, 40, 55, 56, 57, 58,),
                                            array(1, 3, 11, 39, 40, 55, 56, 57, 58,),
                                            array(1, 3, 22, 39, 40, 55, 56, 57, 58,),
                                            array(1, 3, 11, 39, 40, 55, 56, 57, 58,),
                                            array(1, 3, 11, 39, 40, 55, 56, 57, 58,),
                                            array(1, 3, 39, 40, 55, 56, 57, 58, 60,),
                                            array(1, 3, 38, 39, 40, 55, 56, 57, 58,),
                                            array(1, 2, 3, 39, 40, 55, 56, 57, 58,),
                                            array(1, 3, 39, 40, 53, 55, 56, 57, 58,),
                                            array(1, 3, 11, 39, 40, 55, 56, 57, 58,),
                                            array(1, 3, 38, 39, 40, 55, 56, 57, 58,),
                                            array(1, 3, 39, 40, 55, 56, 57, 58,), array(1, 3, 39, 40, 55, 56, 57, 58,),
                                            array(1, 3, 39, 40, 55, 56, 57, 58,), array(1, 3, 39, 40, 55, 56, 57, 58,),
                                            array(1, 3, 39, 40, 55, 56, 57, 58,), array(1, 3, 39, 40, 55, 56, 57, 58,),
                                            array(1, 3, 39, 40, 55, 56, 57, 58,), array(1, 3, 39, 40, 55, 56, 57, 58,),
                                            array(1, 3, 39, 40, 55, 56, 57, 58,), array(1, 3, 39, 40, 55, 56, 57, 58,),
                                            array(1, 3, 39, 40, 55, 56, 57, 58,), array(1, 3, 39, 40, 55, 56, 57, 58,),
                                            array(3, 39, 40, 55, 56, 57, 58,), array(3, 39, 40, 55, 56, 57, 58,),
                                            array(14, 17, 49, 51, 54,),
                                            array(5, 12, 13, 14, 16, 19, 20, 21, 26, 30, 32, 33, 59, 60,),
                                            array(1, 11, 18, 27, 34, 37, 48,), array(1, 11, 27, 34,),
                                            array(14, 17, 51, 54,), array(1, 27, 34,), array(14, 37, 54,),
                                            array(5, 12, 13, 14, 16, 19, 20, 21, 26, 30, 32, 33, 59, 60,),
                                            array(12, 13, 17, 27, 29, 34,), array(12, 13, 17, 27, 29, 34,),
                                            array(12, 13, 17, 27, 34,), array(12, 13, 17, 27, 34,), array(14, 37, 54,),
                                            array(1, 27, 34,), array(14, 37, 54,), array(18, 45, 52,),
                                            array(1, 27, 34,), array(1, 2,), array(1, 11, 27, 28, 34,),
                                            array(11, 23, 27, 34, 46,), array(11, 23, 27, 34, 46,),
                                            array(12, 13, 17, 50,), array(1, 11, 27, 34,), array(13, 14, 17, 54,),
                                            array(1, 11, 27, 34,), array(15, 18, 48,), array(8, 9, 10,),
                                            array(12, 13, 17,), array(12, 13, 17,), array(15, 18, 48,), array(1, 11,),
                                            array(14, 17,), array(1, 18,), array(27, 34,), array(27, 34,),
                                            array(18, 48,), array(14, 17,), array(1, 53,), array(27, 34,),
                                            array(1, 29,), array(14, 54,), array(1,), array(18,), array(1,), array(1,),
                                            array(1,), array(1,), array(1,), array(1,), array(18,), array(), array(),
                                            array(), array(2, 12, 13, 15, 17, 18, 45, 48, 50, 52,),
                                            array(2, 12, 13, 17, 18, 45, 48, 50, 52, 53,),
                                            array(2, 12, 13, 15, 17, 18, 45, 48, 50, 52,),
                                            array(2, 12, 13, 17, 18, 45, 48, 50, 52,),
                                            array(2, 12, 13, 17, 18, 45, 48, 50, 52,),
                                            array(12, 13, 17, 18, 45, 48, 50, 52,), array(13, 14, 17, 35, 54,),
                                            array(12, 13, 17, 50,), array(12, 13, 17,), array(15, 45, 52,),
                                            array(13, 37,), array(27, 34,), array(27, 34,), array(27, 34,),
                                            array(27, 34,), array(27, 34,), array(27, 34,), array(45, 52,),
                                            array(45, 52,), array(27, 34,), array(27, 34,), array(45, 52,),
                                            array(27, 34,), array(14, 54,), array(27, 34,), array(27, 34,),
                                            array(27, 34,), array(15, 23,), array(45, 52,), array(14, 54,),
                                            array(27, 34,), array(45, 52,), array(27, 34,), array(27, 34,),
                                            array(27, 34,), array(27, 34,), array(45, 52,), array(45, 52,),
                                            array(45, 52,), array(27, 34,), array(45, 52,), array(45, 52,),
                                            array(14, 54,), array(14, 54,), array(27, 34,), array(2,), array(9,),
                                            array(1,), array(1,), array(2,), array(1,), array(1,), array(37,),
                                            array(18,), array(18,), array(18,), array(1,), array(), array(), array(),
                                            array(), array(), array(1, 2, 3, 37, 39, 40, 48, 55, 56, 57, 58,),
                                            array(11, 22, 24, 27, 34, 36, 38, 45,), array(11, 15, 27, 34, 37, 48,),
                                            array(37, 45, 48, 53,), array(12, 13, 17, 50,), array(23, 46, 53,),
                                            array(29, 37, 48,), array(23, 46, 60,), array(36, 38,), array(22, 36,),
                                            array(36, 53,), array(17, 50,), array(45, 53,), array(36, 38,),
                                            array(36, 38,), array(37, 48,), array(23, 46,), array(37, 48,),
                                            array(15, 45,), array(37, 48,), array(51,), array(15,), array(17,),
                                            array(24,), array(38,), array(17,), array(53,), array(53,), array(51,),
                                            array(17,), array(17,), array(17,), array(17,), array(17,), array(37,),
                                            array(17,), array(41,), array(14,), array(37,), array(17,), array(11,),
                                            array(35,), array(45,), array(17,), array(35,), array(5,), array(), array(),
                                            array(), array(), array(), array(), array(), array(), array(), array(),
                                            array(), array(), array(), array(), array(), array(), array(), array(),
                                            array(), array(), array(), array(), array(), array(), array(), array(),
                                            array(), array(), array(), array(), array(), array(), array(), array(),
                                            array(), array(), array(), array(), array(), array(), array(), array(),
                                            array(), array(), array(), array(), array(), array(), array(), array(),
                                            array(), array(), array(), array(), array(), array(), array(), array(),
                                            array(), array(), array(), array(), array(), array(), array(), array(),
                                            array(), array(), array(), array(), array(), array(), array(), array(),
                                            array(), array(), array(), array(), array(), array(), array(), array(),
                                            array(), array(), array(), array(), array(), array(), array(), array(),
                                            array(), array(), array(), array(), array(), array(),);
    static public $yy_default       = array(338, 515, 494, 494, 530, 530, 530, 494, 530, 530, 530, 530, 530, 530, 530,
                                            530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
                                            530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
                                            530, 396, 372, 359, 396, 362, 396, 335, 401, 530, 530, 530, 530, 530, 530,
                                            530, 530, 530, 530, 408, 418, 403, 493, 398, 401, 518, 407, 517, 377, 492,
                                            516, 423, 422, 530, 530, 434, 410, 530, 396, 530, 530, 396, 396, 396, 396,
                                            530, 396, 530, 506, 396, 386, 410, 424, 424, 459, 410, 530, 410, 449, 530,
                                            459, 459, 449, 410, 530, 390, 396, 374, 449, 530, 410, 396, 410, 530, 392,
                                            449, 417, 410, 421, 427, 426, 413, 503, 425, 414, 501, 448, 448, 448, 448,
                                            448, 448, 530, 461, 459, 475, 459, 366, 381, 370, 369, 376, 368, 487, 457,
                                            363, 364, 485, 360, 530, 358, 380, 375, 530, 484, 530, 356, 455, 383, 373,
                                            384, 382, 454, 456, 453, 379, 452, 486, 530, 530, 385, 495, 350, 393, 416,
                                            496, 387, 443, 459, 481, 507, 504, 391, 500, 500, 500, 459, 459, 434, 430,
                                            434, 434, 460, 424, 434, 424, 530, 530, 530, 530, 430, 530, 530, 434, 424,
                                            530, 430, 444, 530, 530, 530, 404, 530, 530, 530, 439, 530, 530, 530, 530,
                                            530, 530, 505, 530, 436, 530, 475, 530, 530, 530, 430, 530, 432, 342, 378,
                                            411, 480, 497, 475, 498, 464, 428, 462, 397, 437, 438, 446, 463, 447, 458,
                                            524, 479, 389, 351, 339, 340, 341, 344, 343, 345, 346, 347, 348, 349, 352,
                                            405, 353, 354, 394, 409, 365, 371, 395, 477, 478, 499, 502, 412, 465, 514,
                                            511, 415, 337, 450, 451, 483, 476, 491, 526, 513, 527, 488, 512, 482, 388,
                                            519, 520, 522, 529, 528, 525, 523, 510, 509, 436, 439, 490, 521, 489, 429,
                                            431, 474, 468, 433, 467, 435, 466, 508, 440, 469, 441, 471, 419, 420, 442,
                                            445, 472, 470, 473, 336,);
    public static $yyFallback = array();
    public static $yyRuleName = array('start ::= template', 'template ::= template_element',
                                      'template ::= template template_element', 'template ::=',
                                      'template_element ::= smartytag', 'template_element ::= literal',
                                      'template_element ::= PHP', 'template_element ::= text_content',
                                      'text_content ::= TEXT', 'text_content ::= text_content TEXT',
                                      'template_element ::= STRIPON', 'template_element ::= STRIPOFF',
                                      'literal ::= LITERALSTART LITERALEND',
                                      'literal ::= LITERALSTART literal_elements LITERALEND',
                                      'literal_elements ::= literal_elements literal_element', 'literal_elements ::=',
                                      'literal_element ::= literal', 'literal_element ::= LITERAL',
                                      'smartytag ::= tag RDEL', 'smartytag ::= SIMPELOUTPUT', 'tag ::= LDEL variable',
                                      'tag ::= LDEL variable attributes', 'tag ::= LDEL value',
                                      'tag ::= LDEL value attributes', 'tag ::= LDEL expr',
                                      'tag ::= LDEL expr attributes', 'tag ::= LDEL DOLLARID EQUAL value',
                                      'tag ::= LDEL DOLLARID EQUAL expr', 'tag ::= LDEL DOLLARID EQUAL expr attributes',
                                      'tag ::= LDEL varindexed EQUAL expr attributes', 'smartytag ::= SIMPLETAG',
                                      'tag ::= LDEL ID attributes', 'tag ::= LDEL ID',
                                      'tag ::= LDEL ID modifierlist attributes', 'tag ::= LDEL ID PTR ID attributes',
                                      'tag ::= LDEL ID PTR ID modifierlist attributes',
                                      'tag ::= LDELMAKENOCACHE DOLLARID', 'tag ::= LDELIF expr',
                                      'tag ::= LDELIF expr attributes', 'tag ::= LDELIF statement',
                                      'tag ::= LDELIF statement attributes',
                                      'tag ::= LDELFOR statements SEMICOLON expr SEMICOLON varindexed foraction attributes',
                                      'foraction ::= EQUAL expr', 'foraction ::= INCDEC',
                                      'tag ::= LDELFOR statement TO expr attributes',
                                      'tag ::= LDELFOR statement TO expr STEP expr attributes',
                                      'tag ::= LDELFOREACH attributes',
                                      'tag ::= LDELFOREACH SPACE value AS varvar attributes',
                                      'tag ::= LDELFOREACH SPACE value AS varvar APTR varvar attributes',
                                      'tag ::= LDELFOREACH SPACE expr AS varvar attributes',
                                      'tag ::= LDELFOREACH SPACE expr AS varvar APTR varvar attributes',
                                      'tag ::= LDELSETFILTER ID modparameters',
                                      'tag ::= LDELSETFILTER ID modparameters modifierlist',
                                      'tag ::= LDEL SMARTYBLOCKCHILDPARENT', 'smartytag ::= CLOSETAG',
                                      'tag ::= LDELSLASH ID', 'tag ::= LDELSLASH ID modifierlist',
                                      'tag ::= LDELSLASH ID PTR ID', 'tag ::= LDELSLASH ID PTR ID modifierlist',
                                      'attributes ::= attributes attribute', 'attributes ::= attribute',
                                      'attributes ::=', 'attribute ::= SPACE ID EQUAL ID', 'attribute ::= ATTR expr',
                                      'attribute ::= ATTR value', 'attribute ::= SPACE ID', 'attribute ::= SPACE expr',
                                      'attribute ::= SPACE value', 'attribute ::= SPACE INTEGER EQUAL expr',
                                      'statements ::= statement', 'statements ::= statements COMMA statement',
                                      'statement ::= DOLLARID EQUAL INTEGER', 'statement ::= DOLLARID EQUAL expr',
                                      'statement ::= varindexed EQUAL expr', 'statement ::= OPENP statement CLOSEP',
                                      'expr ::= value', 'expr ::= ternary', 'expr ::= DOLLARID COLON ID',
                                      'expr ::= expr MATH value', 'expr ::= expr UNIMATH value', 'expr ::= array',
                                      'expr ::= expr modifierlist', 'expr ::= expr tlop value',
                                      'expr ::= expr lop expr', 'expr ::= expr scond', 'expr ::= expr ISIN array',
                                      'expr ::= expr ISIN value',
                                      'ternary ::= OPENP expr CLOSEP QMARK DOLLARID COLON expr',
                                      'ternary ::= OPENP expr CLOSEP QMARK expr COLON expr', 'value ::= variable',
                                      'value ::= UNIMATH value', 'value ::= NOT value', 'value ::= TYPECAST value',
                                      'value ::= variable INCDEC', 'value ::= HEX', 'value ::= INTEGER',
                                      'value ::= INTEGER DOT INTEGER', 'value ::= INTEGER DOT', 'value ::= DOT INTEGER',
                                      'value ::= ID', 'value ::= function', 'value ::= OPENP expr CLOSEP',
                                      'value ::= variable INSTANCEOF ns1', 'value ::= variable INSTANCEOF variable',
                                      'value ::= SINGLEQUOTESTRING', 'value ::= doublequoted_with_quotes',
                                      'value ::= varindexed DOUBLECOLON static_class_access', 'value ::= smartytag',
                                      'value ::= value modifierlist', 'value ::= NAMESPACE',
                                      'value ::= ns1 DOUBLECOLON static_class_access', 'ns1 ::= ID',
                                      'ns1 ::= NAMESPACE', 'variable ::= DOLLARID', 'variable ::= varindexed',
                                      'variable ::= varvar AT ID', 'variable ::= object', 'variable ::= HATCH ID HATCH',
                                      'variable ::= HATCH ID HATCH arrayindex', 'variable ::= HATCH variable HATCH',
                                      'variable ::= HATCH variable HATCH arrayindex',
                                      'varindexed ::= DOLLARID arrayindex', 'varindexed ::= varvar arrayindex',
                                      'arrayindex ::= arrayindex indexdef', 'arrayindex ::=',
                                      'indexdef ::= DOT DOLLARID', 'indexdef ::= DOT varvar',
                                      'indexdef ::= DOT varvar AT ID', 'indexdef ::= DOT ID',
                                      'indexdef ::= DOT INTEGER', 'indexdef ::= DOT LDEL expr RDEL',
                                      'indexdef ::= OPENB ID CLOSEB', 'indexdef ::= OPENB ID DOT ID CLOSEB',
                                      'indexdef ::= OPENB SINGLEQUOTESTRING CLOSEB',
                                      'indexdef ::= OPENB INTEGER CLOSEB', 'indexdef ::= OPENB DOLLARID CLOSEB',
                                      'indexdef ::= OPENB variable CLOSEB', 'indexdef ::= OPENB value CLOSEB',
                                      'indexdef ::= OPENB expr CLOSEB', 'indexdef ::= OPENB CLOSEB',
                                      'varvar ::= DOLLARID', 'varvar ::= DOLLAR', 'varvar ::= varvar varvarele',
                                      'varvarele ::= ID', 'varvarele ::= SIMPELOUTPUT', 'varvarele ::= LDEL expr RDEL',
                                      'object ::= varindexed objectchain', 'objectchain ::= objectelement',
                                      'objectchain ::= objectchain objectelement',
                                      'objectelement ::= PTR ID arrayindex', 'objectelement ::= PTR varvar arrayindex',
                                      'objectelement ::= PTR LDEL expr RDEL arrayindex',
                                      'objectelement ::= PTR ID LDEL expr RDEL arrayindex',
                                      'objectelement ::= PTR method', 'function ::= ns1 OPENP params CLOSEP',
                                      'method ::= ID OPENP params CLOSEP', 'method ::= DOLLARID OPENP params CLOSEP',
                                      'params ::= params COMMA expr', 'params ::= expr', 'params ::=',
                                      'modifierlist ::= modifierlist modifier modparameters',
                                      'modifierlist ::= modifier modparameters', 'modifier ::= VERT AT ID',
                                      'modifier ::= VERT ID', 'modparameters ::= modparameters modparameter',
                                      'modparameters ::=', 'modparameter ::= COLON value',
                                      'modparameter ::= COLON array', 'static_class_access ::= method',
                                      'static_class_access ::= method objectchain', 'static_class_access ::= ID',
                                      'static_class_access ::= DOLLARID arrayindex',
                                      'static_class_access ::= DOLLARID arrayindex objectchain', 'lop ::= LOGOP',
                                      'lop ::= SLOGOP', 'tlop ::= TLOGOP', 'scond ::= SINGLECOND',
                                      'array ::= OPENB arrayelements CLOSEB', 'arrayelements ::= arrayelement',
                                      'arrayelements ::= arrayelements COMMA arrayelement', 'arrayelements ::=',
                                      'arrayelement ::= value APTR expr', 'arrayelement ::= ID APTR expr',
                                      'arrayelement ::= expr', 'doublequoted_with_quotes ::= QUOTE QUOTE',
                                      'doublequoted_with_quotes ::= QUOTE doublequoted QUOTE',
                                      'doublequoted ::= doublequoted doublequotedcontent',
                                      'doublequoted ::= doublequotedcontent',
                                      'doublequotedcontent ::= BACKTICK variable BACKTICK',
                                      'doublequotedcontent ::= BACKTICK expr BACKTICK',
                                      'doublequotedcontent ::= DOLLARID', 'doublequotedcontent ::= LDEL variable RDEL',
                                      'doublequotedcontent ::= LDEL expr RDEL', 'doublequotedcontent ::= smartytag',
                                      'doublequotedcontent ::= TEXT',);
    public static $yyRuleInfo = array(array(0 => 62, 1 => 1), array(0 => 63, 1 => 1), array(0 => 63, 1 => 2),
                                      array(0 => 63, 1 => 0), array(0 => 64, 1 => 1), array(0 => 64, 1 => 1),
                                      array(0 => 64, 1 => 1), array(0 => 64, 1 => 1), array(0 => 67, 1 => 1),
                                      array(0 => 67, 1 => 2), array(0 => 64, 1 => 1), array(0 => 64, 1 => 1),
                                      array(0 => 66, 1 => 2), array(0 => 66, 1 => 3), array(0 => 68, 1 => 2),
                                      array(0 => 68, 1 => 0), array(0 => 69, 1 => 1), array(0 => 69, 1 => 1),
                                      array(0 => 65, 1 => 2), array(0 => 65, 1 => 1), array(0 => 70, 1 => 2),
                                      array(0 => 70, 1 => 3), array(0 => 70, 1 => 2), array(0 => 70, 1 => 3),
                                      array(0 => 70, 1 => 2), array(0 => 70, 1 => 3), array(0 => 70, 1 => 4),
                                      array(0 => 70, 1 => 4), array(0 => 70, 1 => 5), array(0 => 70, 1 => 5),
                                      array(0 => 65, 1 => 1), array(0 => 70, 1 => 3), array(0 => 70, 1 => 2),
                                      array(0 => 70, 1 => 4), array(0 => 70, 1 => 5), array(0 => 70, 1 => 6),
                                      array(0 => 70, 1 => 2), array(0 => 70, 1 => 2), array(0 => 70, 1 => 3),
                                      array(0 => 70, 1 => 2), array(0 => 70, 1 => 3), array(0 => 70, 1 => 8),
                                      array(0 => 79, 1 => 2), array(0 => 79, 1 => 1), array(0 => 70, 1 => 5),
                                      array(0 => 70, 1 => 7), array(0 => 70, 1 => 2), array(0 => 70, 1 => 6),
                                      array(0 => 70, 1 => 8), array(0 => 70, 1 => 6), array(0 => 70, 1 => 8),
                                      array(0 => 70, 1 => 3), array(0 => 70, 1 => 4), array(0 => 70, 1 => 2),
                                      array(0 => 65, 1 => 1), array(0 => 70, 1 => 2), array(0 => 70, 1 => 3),
                                      array(0 => 70, 1 => 4), array(0 => 70, 1 => 5), array(0 => 72, 1 => 2),
                                      array(0 => 72, 1 => 1), array(0 => 72, 1 => 0), array(0 => 82, 1 => 4),
                                      array(0 => 82, 1 => 2), array(0 => 82, 1 => 2), array(0 => 82, 1 => 2),
                                      array(0 => 82, 1 => 2), array(0 => 82, 1 => 2), array(0 => 82, 1 => 4),
                                      array(0 => 78, 1 => 1), array(0 => 78, 1 => 3), array(0 => 77, 1 => 3),
                                      array(0 => 77, 1 => 3), array(0 => 77, 1 => 3), array(0 => 77, 1 => 3),
                                      array(0 => 74, 1 => 1), array(0 => 74, 1 => 1), array(0 => 74, 1 => 3),
                                      array(0 => 74, 1 => 3), array(0 => 74, 1 => 3), array(0 => 74, 1 => 1),
                                      array(0 => 74, 1 => 2), array(0 => 74, 1 => 3), array(0 => 74, 1 => 3),
                                      array(0 => 74, 1 => 2), array(0 => 74, 1 => 3), array(0 => 74, 1 => 3),
                                      array(0 => 83, 1 => 7), array(0 => 83, 1 => 7), array(0 => 73, 1 => 1),
                                      array(0 => 73, 1 => 2), array(0 => 73, 1 => 2), array(0 => 73, 1 => 2),
                                      array(0 => 73, 1 => 2), array(0 => 73, 1 => 1), array(0 => 73, 1 => 1),
                                      array(0 => 73, 1 => 3), array(0 => 73, 1 => 2), array(0 => 73, 1 => 2),
                                      array(0 => 73, 1 => 1), array(0 => 73, 1 => 1), array(0 => 73, 1 => 3),
                                      array(0 => 73, 1 => 3), array(0 => 73, 1 => 3), array(0 => 73, 1 => 1),
                                      array(0 => 73, 1 => 1), array(0 => 73, 1 => 3), array(0 => 73, 1 => 1),
                                      array(0 => 73, 1 => 2), array(0 => 73, 1 => 1), array(0 => 73, 1 => 3),
                                      array(0 => 89, 1 => 1), array(0 => 89, 1 => 1), array(0 => 71, 1 => 1),
                                      array(0 => 71, 1 => 1), array(0 => 71, 1 => 3), array(0 => 71, 1 => 1),
                                      array(0 => 71, 1 => 3), array(0 => 71, 1 => 4), array(0 => 71, 1 => 3),
                                      array(0 => 71, 1 => 4), array(0 => 75, 1 => 2), array(0 => 75, 1 => 2),
                                      array(0 => 93, 1 => 2), array(0 => 93, 1 => 0), array(0 => 94, 1 => 2),
                                      array(0 => 94, 1 => 2), array(0 => 94, 1 => 4), array(0 => 94, 1 => 2),
                                      array(0 => 94, 1 => 2), array(0 => 94, 1 => 4), array(0 => 94, 1 => 3),
                                      array(0 => 94, 1 => 5), array(0 => 94, 1 => 3), array(0 => 94, 1 => 3),
                                      array(0 => 94, 1 => 3), array(0 => 94, 1 => 3), array(0 => 94, 1 => 3),
                                      array(0 => 94, 1 => 3), array(0 => 94, 1 => 2), array(0 => 80, 1 => 1),
                                      array(0 => 80, 1 => 1), array(0 => 80, 1 => 2), array(0 => 95, 1 => 1),
                                      array(0 => 95, 1 => 1), array(0 => 95, 1 => 3), array(0 => 92, 1 => 2),
                                      array(0 => 96, 1 => 1), array(0 => 96, 1 => 2), array(0 => 97, 1 => 3),
                                      array(0 => 97, 1 => 3), array(0 => 97, 1 => 5), array(0 => 97, 1 => 6),
                                      array(0 => 97, 1 => 2), array(0 => 88, 1 => 4), array(0 => 98, 1 => 4),
                                      array(0 => 98, 1 => 4), array(0 => 99, 1 => 3), array(0 => 99, 1 => 1),
                                      array(0 => 99, 1 => 0), array(0 => 76, 1 => 3), array(0 => 76, 1 => 2),
                                      array(0 => 100, 1 => 3), array(0 => 100, 1 => 2), array(0 => 81, 1 => 2),
                                      array(0 => 81, 1 => 0), array(0 => 101, 1 => 2), array(0 => 101, 1 => 2),
                                      array(0 => 91, 1 => 1), array(0 => 91, 1 => 2), array(0 => 91, 1 => 1),
                                      array(0 => 91, 1 => 2), array(0 => 91, 1 => 3), array(0 => 86, 1 => 1),
                                      array(0 => 86, 1 => 1), array(0 => 85, 1 => 1), array(0 => 87, 1 => 1),
                                      array(0 => 84, 1 => 3), array(0 => 102, 1 => 1), array(0 => 102, 1 => 3),
                                      array(0 => 102, 1 => 0), array(0 => 103, 1 => 3), array(0 => 103, 1 => 3),
                                      array(0 => 103, 1 => 1), array(0 => 90, 1 => 2), array(0 => 90, 1 => 3),
                                      array(0 => 104, 1 => 2), array(0 => 104, 1 => 1), array(0 => 105, 1 => 3),
                                      array(0 => 105, 1 => 3), array(0 => 105, 1 => 1), array(0 => 105, 1 => 3),
                                      array(0 => 105, 1 => 3), array(0 => 105, 1 => 1), array(0 => 105, 1 => 1),);
    public static $yyReduceMap = array(0 => 0, 1 => 1, 2 => 2, 4 => 4, 5 => 5, 6 => 6, 7 => 7, 8 => 8, 16 => 8, 17 => 8,
                                       43 => 8, 66 => 8, 67 => 8, 75 => 8, 76 => 8, 80 => 8, 89 => 8, 94 => 8, 95 => 8,
                                       100 => 8, 104 => 8, 105 => 8, 109 => 8, 111 => 8, 116 => 8, 178 => 8, 183 => 8,
                                       9 => 9, 10 => 10, 11 => 11, 12 => 12, 15 => 12, 13 => 13, 74 => 13, 14 => 14,
                                       90 => 14, 92 => 14, 93 => 14, 123 => 14, 18 => 18, 19 => 19, 20 => 20, 22 => 20,
                                       24 => 20, 21 => 21, 23 => 21, 25 => 21, 26 => 26, 27 => 26, 28 => 28, 29 => 29,
                                       30 => 30, 31 => 31, 32 => 32, 33 => 33, 34 => 34, 35 => 35, 36 => 36, 37 => 37,
                                       38 => 38, 40 => 38, 39 => 39, 41 => 41, 42 => 42, 44 => 44, 45 => 45, 46 => 46,
                                       47 => 47, 49 => 47, 48 => 48, 50 => 48, 51 => 51, 52 => 52, 53 => 53, 54 => 54,
                                       55 => 55, 56 => 56, 57 => 57, 58 => 58, 59 => 59, 60 => 60, 69 => 60, 158 => 60,
                                       162 => 60, 166 => 60, 167 => 60, 61 => 61, 159 => 61, 165 => 61, 62 => 62,
                                       63 => 63, 64 => 63, 65 => 65, 143 => 65, 68 => 68, 70 => 70, 71 => 71, 72 => 71,
                                       73 => 73, 77 => 77, 78 => 78, 79 => 78, 81 => 81, 108 => 81, 82 => 82, 83 => 83,
                                       84 => 84, 85 => 85, 86 => 86, 87 => 87, 88 => 88, 91 => 91, 96 => 96, 97 => 97,
                                       98 => 98, 99 => 99, 101 => 101, 102 => 102, 103 => 102, 106 => 106, 107 => 107,
                                       110 => 110, 112 => 112, 113 => 113, 114 => 114, 115 => 115, 117 => 117,
                                       118 => 118, 119 => 119, 120 => 120, 121 => 121, 122 => 122, 124 => 124,
                                       180 => 124, 125 => 125, 126 => 126, 127 => 127, 128 => 128, 129 => 129,
                                       130 => 130, 138 => 130, 131 => 131, 132 => 132, 133 => 133, 134 => 133,
                                       136 => 133, 137 => 133, 135 => 135, 139 => 139, 140 => 140, 141 => 141,
                                       184 => 141, 142 => 142, 144 => 144, 145 => 145, 146 => 146, 147 => 147,
                                       148 => 148, 149 => 149, 150 => 150, 151 => 151, 152 => 152, 153 => 153,
                                       154 => 154, 155 => 155, 156 => 156, 157 => 157, 160 => 160, 161 => 161,
                                       163 => 163, 164 => 164, 168 => 168, 169 => 169, 170 => 170, 171 => 171,
                                       172 => 172, 173 => 173, 174 => 174, 175 => 175, 176 => 176, 177 => 177,
                                       179 => 179, 181 => 181, 182 => 182, 185 => 185, 186 => 186, 187 => 187,
                                       188 => 188, 189 => 188, 191 => 188, 190 => 190, 192 => 192, 193 => 193,
                                       194 => 194,);
    /**
     * result status
     *
     * @var bool
     */
    public $successful = true;
    /**
     * return value
     *
     * @var mixed
     */
    public $retvalue = 0;
    /**
     * @var
     */
    public $yymajor;
    /**
     * last index of array variable
     *
     * @var mixed
     */
    public $last_index;
    /**
     * last variable name
     *
     * @var string
     */
    public $last_variable;
    /**
     * root parse tree buffer
     *
     * @var Smarty_Internal_ParseTree
     */
    public $root_buffer;
    /**
     * current parse tree object
     *
     * @var Smarty_Internal_ParseTree
     */
    public $current_buffer;
    /**
     * lexer object
     *
     * @var Smarty_Internal_Templatelexer
     */
    public $lex;
    /**
     * {strip} status
     *
     * @var bool
     */
    public $strip = false;
    /**
     * compiler object
     *
     * @var Smarty_Internal_TemplateCompilerBase
     */
    public $compiler = null;
    /**
     * smarty object
     *
     * @var Smarty
     */
    public $smarty = null;
    /**
     * template object
     *
     * @var Smarty_Internal_Template
     */
    public $template = null;
    /**
     * block nesting level
     *
     * @var int
     */
    public $block_nesting_level = 0;
    /**
     * security object
     *
     * @var Smarty_Security
     */
    public $security = null;
    /**
     * template prefix array
     *
     * @var \Smarty_Internal_ParseTree[]
     */
    public $template_prefix = array();
    /**
     * security object
     *
     * @var \Smarty_Internal_ParseTree[]
     */
    public $template_postfix = array();
    public $yyTraceFILE;
    public $yyTracePrompt;
public $yyidx;
public $yyerrcnt;
public $yystack = array();
        public $yyTokenName = array('$', 'VERT', 'COLON', 'UNIMATH', 'PHP', 'TEXT', 'STRIPON', 'STRIPOFF', 'LITERALSTART',
                                'LITERALEND', 'LITERAL', 'RDEL', 'SIMPELOUTPUT', 'LDEL', 'DOLLARID', 'EQUAL',
                                'SIMPLETAG', 'ID', 'PTR', 'LDELMAKENOCACHE', 'LDELIF', 'LDELFOR', 'SEMICOLON', 'INCDEC',
                                'TO', 'STEP', 'LDELFOREACH', 'SPACE', 'AS', 'APTR', 'LDELSETFILTER',
                                'SMARTYBLOCKCHILDPARENT', 'CLOSETAG', 'LDELSLASH', 'ATTR', 'INTEGER', 'COMMA', 'OPENP',
                                'CLOSEP', 'MATH', 'ISIN', 'QMARK', 'NOT', 'TYPECAST', 'HEX', 'DOT', 'INSTANCEOF',
                                'SINGLEQUOTESTRING', 'DOUBLECOLON', 'NAMESPACE', 'AT', 'HATCH', 'OPENB', 'CLOSEB',
                                'DOLLAR', 'LOGOP', 'SLOGOP', 'TLOGOP', 'SINGLECOND', 'QUOTE', 'BACKTICK', 'error',
                                'start', 'template', 'template_element', 'smartytag', 'literal', 'text_content',
                                'literal_elements', 'literal_element', 'tag', 'variable', 'attributes', 'value', 'expr',
                                'varindexed', 'modifierlist', 'statement', 'statements', 'foraction', 'varvar',
                                'modparameters', 'attribute', 'ternary', 'array', 'tlop', 'lop', 'scond', 'function',
                                'ns1', 'doublequoted_with_quotes', 'static_class_access', 'object', 'arrayindex',
                                'indexdef', 'varvarele', 'objectchain', 'objectelement', 'method', 'params', 'modifier',
                                'modparameter', 'arrayelements', 'arrayelement', 'doublequoted',
                                'doublequotedcontent',);                    /* Index of top element in stack */
        /**
     * internal error flag
     *
     * @var bool
     */
    private $internalError = false;                 /* Shifts left before out of the error */
        private $_retvalue;  /* The parser's stack */

    /**
     * constructor
     *
     * @param Smarty_Internal_Templatelexer        $lex
     * @param Smarty_Internal_TemplateCompilerBase $compiler
     */
    function __construct(Smarty_Internal_Templatelexer $lex, Smarty_Internal_TemplateCompilerBase $compiler)
    {
        $this->lex = $lex;
        $this->compiler = $compiler;
        $this->template = $this->compiler->template;
        $this->smarty = $this->template->smarty;
        $this->security = isset($this->smarty->security_policy) ? $this->smarty->security_policy : false;
        $this->current_buffer = $this->root_buffer = new Smarty_Internal_ParseTree_Template();
    }

    /**
     * insert PHP code in current buffer
     *
     * @param string $code
     */
    public function insertPhpCode($code)
    {
        $this->current_buffer->append_subtree($this, new Smarty_Internal_ParseTree_Tag($this, $code));
    }

    public function Trace($TraceFILE, $zTracePrompt)
    {
        if (!$TraceFILE) {
            $zTracePrompt = 0;
        } else if (!$zTracePrompt) {
            $TraceFILE = 0;
        }
        $this->yyTraceFILE = $TraceFILE;
        $this->yyTracePrompt = $zTracePrompt;
    }

    public function PrintTrace()
    {
        $this->yyTraceFILE = fopen('php://output', 'w');
        $this->yyTracePrompt = '<br>';
    }

    public function tokenName($tokenType)
    {
        if ($tokenType === 0) {
            return 'End of Input';
        }
        if ($tokenType > 0 && $tokenType < count($this->yyTokenName)) {
            return $this->yyTokenName[ $tokenType ];
        } else {
            return "Unknown";
        }
    }

    public function __destruct()
    {
        while ($this->yystack !== Array()) {
            $this->yy_pop_parser_stack();
        }
        if (is_resource($this->yyTraceFILE)) {
            fclose($this->yyTraceFILE);
        }
    }

    public function yy_pop_parser_stack()
    {
        if (empty($this->yystack)) {
            return;
        }
        $yytos = array_pop($this->yystack);
        if ($this->yyTraceFILE && $this->yyidx >= 0) {
            fwrite($this->yyTraceFILE,
                   $this->yyTracePrompt . 'Popping ' . $this->yyTokenName[ $yytos->major ] . "\n");
        }
        $yymajor = $yytos->major;
        self::yy_destructor($yymajor, $yytos->minor);
        $this->yyidx--;

        return $yymajor;
    }

    public static function yy_destructor($yymajor, $yypminor)
    {
        switch ($yymajor) {
            default:
                break;   /* If no destructor action specified: do nothing */
        }
    }

    public function yy_get_expected_tokens($token)
    {
        static $res3 = array();
        static $res4 = array();
        $state = $this->yystack[ $this->yyidx ]->stateno;
        $expected = self::$yyExpectedTokens[ $state ];
        if (isset($res3[ $state ][ $token ])) {
            if ($res3[ $state ][ $token ]) {
                return $expected;
            }
        } else {
            if ($res3[ $state ][ $token ] = in_array($token, self::$yyExpectedTokens[ $state ], true)) {
                return $expected;
            }
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return array_unique($expected);
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[ $yyruleno ][1];
                    $nextstate = $this->yy_find_reduce_action($this->yystack[ $this->yyidx ]->stateno,
                                                              self::$yyRuleInfo[ $yyruleno ][0]);
                    if (isset(self::$yyExpectedTokens[ $nextstate ])) {
                        $expected = array_merge($expected, self::$yyExpectedTokens[ $nextstate ]);
                        if (isset($res4[ $nextstate ][ $token ])) {
                            if ($res4[ $nextstate ][ $token ]) {
                                $this->yyidx = $yyidx;
                                $this->yystack = $stack;
                                return array_unique($expected);
                            }
                        } else {
                            if ($res4[ $nextstate ][ $token ] =
                                in_array($token, self::$yyExpectedTokens[ $nextstate ], true)) {
                                $this->yyidx = $yyidx;
                                $this->yystack = $stack;
                                return array_unique($expected);
                            }
                        }
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[ $yyruleno ][0];
                        $this->yystack[ $this->yyidx ] = $x;
                        continue 2;
                    } else if ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return array_unique($expected);
                    } else if ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return $expected;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        $this->yyidx = $yyidx;
        $this->yystack = $stack;

        return array_unique($expected);
    }

    public function yy_find_shift_action($iLookAhead)
    {
        $stateno = $this->yystack[ $this->yyidx ]->stateno;

        /* if ($this->yyidx < 0) return self::YY_NO_ACTION;  */
        if (!isset(self::$yy_shift_ofst[ $stateno ])) {
            // no shift actions
            return self::$yy_default[ $stateno ];
        }
        $i = self::$yy_shift_ofst[ $stateno ];
        if ($i === self::YY_SHIFT_USE_DFLT) {
            return self::$yy_default[ $stateno ];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB || self::$yy_lookahead[ $i ] != $iLookAhead) {
            if (count(self::$yyFallback) && $iLookAhead < count(self::$yyFallback) &&
                ($iFallback = self::$yyFallback[ $iLookAhead ]) != 0) {
                if ($this->yyTraceFILE) {
                    fwrite($this->yyTraceFILE,
                           $this->yyTracePrompt . "FALLBACK " . $this->yyTokenName[ $iLookAhead ] . " => " .
                           $this->yyTokenName[ $iFallback ] . "\n");
                }

                return $this->yy_find_shift_action($iFallback);
            }

            return self::$yy_default[ $stateno ];
        } else {
            return self::$yy_action[ $i ];
        }
    }

    public function yy_find_reduce_action($stateno, $iLookAhead)
    {
        /* $stateno = $this->yystack[$this->yyidx]->stateno; */

        if (!isset(self::$yy_reduce_ofst[ $stateno ])) {
            return self::$yy_default[ $stateno ];
        }
        $i = self::$yy_reduce_ofst[ $stateno ];
        if ($i == self::YY_REDUCE_USE_DFLT) {
            return self::$yy_default[ $stateno ];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB || self::$yy_lookahead[ $i ] != $iLookAhead) {
            return self::$yy_default[ $stateno ];
        } else {
            return self::$yy_action[ $i ];
        }
    }

    function yy_r0()
    {
        $this->root_buffer->prepend_array($this, $this->template_prefix);
        $this->root_buffer->append_array($this, $this->template_postfix);
        $this->_retvalue = $this->root_buffer->to_smarty_php($this);
    }

    function yy_r1()
    {
        if ($this->yystack[ $this->yyidx + 0 ]->minor != null) {
            $this->current_buffer->append_subtree($this, $this->yystack[ $this->yyidx + 0 ]->minor);
        }
    }

    #line 219 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r2()
    {
        if ($this->yystack[ $this->yyidx + 0 ]->minor != null) {
            // because of possible code injection
            $this->current_buffer->append_subtree($this, $this->yystack[ $this->yyidx + 0 ]->minor);
        }
    }

    #line 229 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r4()
    {
        if ($this->compiler->has_code) {
            $this->_retvalue = $this->mergePrefixCode($this->yystack[ $this->yyidx + 0 ]->minor);
        } else {
            $this->_retvalue = null;
        }
        $this->compiler->has_variable_string = false;
        $this->block_nesting_level = count($this->compiler->_tag_stack);
    }

    #line 236 "../smarty/lexer/smarty_internal_templateparser.y"

    /**
     *  merge PHP code with prefix code and return parse tree tag object
     *
     * @param string $code
     *
     * @return Smarty_Internal_ParseTree_Tag
     */
    public function mergePrefixCode($code)
    {
        $tmp = '';
        foreach ($this->compiler->prefix_code as $preCode) {
            $tmp .= $preCode;
        }
        $this->compiler->prefix_code = array();
        $tmp .= $code;
        return new Smarty_Internal_ParseTree_Tag($this, $this->compiler->processNocacheCode($tmp, true));
    }

    #line 250 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r5()
    {
        $this->_retvalue = new Smarty_Internal_ParseTree_Text($this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 261 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r6()
    {
        $code = $this->compiler->compileTag('private_php',
                                            array(array('code' => $this->yystack[ $this->yyidx + 0 ]->minor),
                                                  array('type' => $this->lex->phpType)),
                                            array());
        if ($this->compiler->has_code && !empty($code)) {
            $tmp = '';
            foreach ($this->compiler->prefix_code as $code) {
                $tmp .= $code;
            }
            $this->compiler->prefix_code = array();
            $this->_retvalue =
                new Smarty_Internal_ParseTree_Tag($this, $this->compiler->processNocacheCode($tmp . $code, true));
        } else {
            $this->_retvalue = null;
        }
    }

    #line 265 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r7()
    {
        $this->_retvalue = $this->compiler->processText($this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 276 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r8()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 280 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r9()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -1 ]->minor . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 284 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r10()
    {
        $this->strip = true;
    }

    #line 289 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r11()
    {
        $this->strip = false;
    }

    #line 293 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r12()
    {
        $this->_retvalue = '';
    }

    #line 298 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r13()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -1 ]->minor;
    }

    #line 302 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r14()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -1 ]->minor . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 306 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r18()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -1 ]->minor;
    }

    #line 322 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r19()
    {
        $var =
            trim(substr($this->yystack[ $this->yyidx + 0 ]->minor, $this->lex->ldel_length, -$this->lex->rdel_length),
                 ' $');
        if (preg_match('/^(.*)(\s+nocache)$/', $var, $match)) {
            $this->_retvalue = $this->compiler->compileTag('private_print_expression',
                                                           array('nocache'),
                                                           array('value' => $this->compiler->compileVariable('\'' .
                                                                                                             $match[1] .
                                                                                                             '\'')));
        } else {
            $this->_retvalue = $this->compiler->compileTag('private_print_expression',
                                                           array(),
                                                           array('value' => $this->compiler->compileVariable('\'' .
                                                                                                             $var .
                                                                                                             '\'')));
        }
    }

    #line 328 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r20()
    {
        $this->_retvalue = $this->compiler->compileTag('private_print_expression',
                                                       array(),
                                                       array('value' => $this->yystack[ $this->yyidx + 0 ]->minor));
    }

    #line 338 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r21()
    {
        $this->_retvalue = $this->compiler->compileTag('private_print_expression',
                                                       $this->yystack[ $this->yyidx + 0 ]->minor,
                                                       array('value' => $this->yystack[ $this->yyidx + -1 ]->minor));
    }

    #line 342 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r26()
    {
        $this->_retvalue = $this->compiler->compileTag('assign',
                                                       array(array('value' => $this->yystack[ $this->yyidx +
                                                                                              0 ]->minor),
                                                             array('var' => '\'' . substr($this->yystack[ $this->yyidx +
                                                                                                          -2 ]->minor,
                                                                                          1) . '\'')));
    }

    #line 365 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r28()
    {
        $this->_retvalue = $this->compiler->compileTag('assign',
                                                       array_merge(array(array('value' => $this->yystack[ $this->yyidx +
                                                                                                          -1 ]->minor),
                                                                         array('var' => '\'' .
                                                                                        substr($this->yystack[ $this->yyidx +
                                                                                                               -3 ]->minor,
                                                                                               1) . '\'')),
                                                                   $this->yystack[ $this->yyidx + 0 ]->minor));
    }

    #line 373 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r29()
    {
        $this->_retvalue = $this->compiler->compileTag('assign',
                                                       array_merge(array(array('value' => $this->yystack[ $this->yyidx +
                                                                                                          -1 ]->minor),
                                                                         array('var' => $this->yystack[ $this->yyidx +
                                                                                                        -3 ]->minor['var'])),
                                                                   $this->yystack[ $this->yyidx + 0 ]->minor),
                                                       array('smarty_internal_index' => $this->yystack[ $this->yyidx +
                                                                                                        -3 ]->minor['smarty_internal_index']));
    }

    #line 377 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r30()
    {
        $tag =
            trim(substr($this->yystack[ $this->yyidx + 0 ]->minor, $this->lex->ldel_length, -$this->lex->rdel_length));
        if ($tag == 'strip') {
            $this->strip = true;
            $this->_retvalue = null;;
        } else {
            if (defined($tag)) {
                if ($this->security) {
                    $this->security->isTrustedConstant($tag, $this->compiler);
                }
                $this->_retvalue =
                    $this->compiler->compileTag('private_print_expression', array(), array('value' => $tag));
            } else {
                if (preg_match('/^(.*)(\s+nocache)$/', $tag, $match)) {
                    $this->_retvalue = $this->compiler->compileTag($match[1], array("'nocache'"));
                } else {
                    $this->_retvalue = $this->compiler->compileTag($tag, array());
                }
            }
        }
    }

    #line 382 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r31()
    {
        if (defined($this->yystack[ $this->yyidx + -1 ]->minor)) {
            if ($this->security) {
                $this->security->isTrustedConstant($this->yystack[ $this->yyidx + -1 ]->minor, $this->compiler);
            }
            $this->_retvalue = $this->compiler->compileTag('private_print_expression',
                                                           $this->yystack[ $this->yyidx + 0 ]->minor,
                                                           array('value' => $this->yystack[ $this->yyidx +
                                                                                            -1 ]->minor));
        } else {
            $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + -1 ]->minor,
                                                           $this->yystack[ $this->yyidx + 0 ]->minor);
        }
    }

    #line 404 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r32()
    {
        if (defined($this->yystack[ $this->yyidx + 0 ]->minor)) {
            if ($this->security) {
                $this->security->isTrustedConstant($this->yystack[ $this->yyidx + 0 ]->minor, $this->compiler);
            }
            $this->_retvalue = $this->compiler->compileTag('private_print_expression',
                                                           array(),
                                                           array('value' => $this->yystack[ $this->yyidx + 0 ]->minor));
        } else {
            $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + 0 ]->minor, array());
        }
    }

    #line 414 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r33()
    {
        if (defined($this->yystack[ $this->yyidx + -2 ]->minor)) {
            if ($this->security) {
                $this->security->isTrustedConstant($this->yystack[ $this->yyidx + -2 ]->minor, $this->compiler);
            }
            $this->_retvalue = $this->compiler->compileTag('private_print_expression',
                                                           $this->yystack[ $this->yyidx + 0 ]->minor,
                                                           array('value' => $this->yystack[ $this->yyidx + -2 ]->minor,
                                                                 'modifierlist' => $this->yystack[ $this->yyidx +
                                                                                                   -1 ]->minor));
        } else {
            $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + -2 ]->minor,
                                                           $this->yystack[ $this->yyidx + 0 ]->minor,
                                                           array('modifierlist' => $this->yystack[ $this->yyidx +
                                                                                                   -1 ]->minor));
        }
    }

    #line 427 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r34()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + -3 ]->minor,
                                                       $this->yystack[ $this->yyidx + 0 ]->minor,
                                                       array('object_method' => $this->yystack[ $this->yyidx +
                                                                                                -1 ]->minor));
    }

    #line 439 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r35()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + -4 ]->minor,
                                                       $this->yystack[ $this->yyidx + 0 ]->minor,
                                                       array('modifierlist' => $this->yystack[ $this->yyidx +
                                                                                               -1 ]->minor,
                                                             'object_method' => $this->yystack[ $this->yyidx +
                                                                                                -2 ]->minor));
    }

    #line 444 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r36()
    {
        $this->_retvalue = $this->compiler->compileTag('make_nocache',
                                                       array(array('var' => '\'' . substr($this->yystack[ $this->yyidx +
                                                                                                          0 ]->minor,
                                                                                          1) . '\'')));
    }

    #line 449 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r37()
    {
        $tag = trim(substr($this->yystack[ $this->yyidx + -1 ]->minor, $this->lex->ldel_length));
        $this->_retvalue = $this->compiler->compileTag(($tag == 'else if') ? 'elseif' : $tag,
                                                       array(),
                                                       array('if condition' => $this->yystack[ $this->yyidx +
                                                                                               0 ]->minor));
    }

    #line 454 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r38()
    {
        $tag = trim(substr($this->yystack[ $this->yyidx + -2 ]->minor, $this->lex->ldel_length));
        $this->_retvalue = $this->compiler->compileTag(($tag == 'else if') ? 'elseif' : $tag,
                                                       $this->yystack[ $this->yyidx + 0 ]->minor,
                                                       array('if condition' => $this->yystack[ $this->yyidx +
                                                                                               -1 ]->minor));
    }

    #line 459 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r39()
    {
        $tag = trim(substr($this->yystack[ $this->yyidx + -1 ]->minor, $this->lex->ldel_length));
        $this->_retvalue = $this->compiler->compileTag(($tag == 'else if') ? 'elseif' : $tag,
                                                       array(),
                                                       array('if condition' => $this->yystack[ $this->yyidx +
                                                                                               0 ]->minor));
    }

    #line 464 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r41()
    {
        $this->_retvalue = $this->compiler->compileTag('for',
                                                       array_merge($this->yystack[ $this->yyidx + 0 ]->minor,
                                                                   array(array('start' => $this->yystack[ $this->yyidx +
                                                                                                          -6 ]->minor),
                                                                         array('ifexp' => $this->yystack[ $this->yyidx +
                                                                                                          -4 ]->minor),
                                                                         array('var' => $this->yystack[ $this->yyidx +
                                                                                                        -2 ]->minor),
                                                                         array('step' => $this->yystack[ $this->yyidx +
                                                                                                         -1 ]->minor))),
                                                       1);
    }

    #line 475 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r42()
    {
        $this->_retvalue = '=' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 479 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r44()
    {
        $this->_retvalue = $this->compiler->compileTag('for',
                                                       array_merge($this->yystack[ $this->yyidx + 0 ]->minor,
                                                                   array(array('start' => $this->yystack[ $this->yyidx +
                                                                                                          -3 ]->minor),
                                                                         array('to' => $this->yystack[ $this->yyidx +
                                                                                                       -1 ]->minor))),
                                                       0);
    }

    #line 487 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r45()
    {
        $this->_retvalue = $this->compiler->compileTag('for',
                                                       array_merge($this->yystack[ $this->yyidx + 0 ]->minor,
                                                                   array(array('start' => $this->yystack[ $this->yyidx +
                                                                                                          -5 ]->minor),
                                                                         array('to' => $this->yystack[ $this->yyidx +
                                                                                                       -3 ]->minor),
                                                                         array('step' => $this->yystack[ $this->yyidx +
                                                                                                         -1 ]->minor))),
                                                       0);
    }

    #line 491 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r46()
    {
        $this->_retvalue = $this->compiler->compileTag('foreach', $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 496 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r47()
    {
        $this->_retvalue = $this->compiler->compileTag('foreach',
                                                       array_merge($this->yystack[ $this->yyidx + 0 ]->minor,
                                                                   array(array('from' => $this->yystack[ $this->yyidx +
                                                                                                         -3 ]->minor),
                                                                         array('item' => $this->yystack[ $this->yyidx +
                                                                                                         -1 ]->minor))));
    }

    #line 501 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r48()
    {
        $this->_retvalue = $this->compiler->compileTag('foreach',
                                                       array_merge($this->yystack[ $this->yyidx + 0 ]->minor,
                                                                   array(array('from' => $this->yystack[ $this->yyidx +
                                                                                                         -5 ]->minor),
                                                                         array('item' => $this->yystack[ $this->yyidx +
                                                                                                         -1 ]->minor),
                                                                         array('key' => $this->yystack[ $this->yyidx +
                                                                                                        -3 ]->minor))));
    }

    #line 505 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r51()
    {
        $this->_retvalue = $this->compiler->compileTag('setfilter',
                                                       array(),
                                                       array('modifier_list' => array(array_merge(array($this->yystack[ $this->yyidx +
                                                                                                                        -1 ]->minor),
                                                                                                  $this->yystack[ $this->yyidx +
                                                                                                                  0 ]->minor))));
    }

    #line 518 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r52()
    {
        $this->_retvalue = $this->compiler->compileTag('setfilter',
                                                       array(),
                                                       array('modifier_list' => array_merge(array(array_merge(array($this->yystack[ $this->yyidx +
                                                                                                                                    -2 ]->minor),
                                                                                                              $this->yystack[ $this->yyidx +
                                                                                                                              -1 ]->minor)),
                                                                                            $this->yystack[ $this->yyidx +
                                                                                                            0 ]->minor)));
    }

    #line 522 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r53()
    {
        $j = strrpos($this->yystack[ $this->yyidx + 0 ]->minor, '.');
        if ($this->yystack[ $this->yyidx + 0 ]->minor[ $j + 1 ] == 'c') {
            // {$smarty.block.child}
            $this->_retvalue = $this->compiler->compileTag('block_child', array());;
        } else {
            // {$smarty.block.parent}
            $this->_retvalue = $this->compiler->compileTag('block_parent', array());;
        }
    }

    #line 527 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r54()
    {
        $tag =
            trim(substr($this->yystack[ $this->yyidx + 0 ]->minor, $this->lex->ldel_length, -$this->lex->rdel_length),
                 ' /');
        if ($tag == 'strip') {
            $this->strip = false;
            $this->_retvalue = null;
        } else {
            $this->_retvalue = $this->compiler->compileTag($tag . 'close', array());
        }
    }

    #line 540 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r55()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + 0 ]->minor . 'close', array());
    }

    #line 549 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r56()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + -1 ]->minor . 'close',
                                                       array(),
                                                       array('modifier_list' => $this->yystack[ $this->yyidx +
                                                                                                0 ]->minor));
    }

    #line 553 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r57()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + -2 ]->minor . 'close',
                                                       array(),
                                                       array('object_method' => $this->yystack[ $this->yyidx +
                                                                                                0 ]->minor));
    }

    #line 558 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r58()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + -3 ]->minor . 'close',
                                                       array(),
                                                       array('object_method' => $this->yystack[ $this->yyidx +
                                                                                                -1 ]->minor,
                                                             'modifier_list' => $this->yystack[ $this->yyidx +
                                                                                                0 ]->minor));
    }

    #line 562 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r59()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -1 ]->minor;
        $this->_retvalue[] = $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 570 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r60()
    {
        $this->_retvalue = array($this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 576 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r61()
    {
        $this->_retvalue = array();
    }

    #line 581 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r62()
    {
        if (defined($this->yystack[ $this->yyidx + 0 ]->minor)) {
            if ($this->security) {
                $this->security->isTrustedConstant($this->yystack[ $this->yyidx + 0 ]->minor, $this->compiler);
            }
            $this->_retvalue =
                array($this->yystack[ $this->yyidx + -2 ]->minor => $this->yystack[ $this->yyidx + 0 ]->minor);
        } else {
            $this->_retvalue =
                array($this->yystack[ $this->yyidx + -2 ]->minor => '\'' . $this->yystack[ $this->yyidx + 0 ]->minor .
                                                                    '\'');
        }
    }

    #line 586 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r63()
    {
        $this->_retvalue =
            array(trim($this->yystack[ $this->yyidx + -1 ]->minor, " =\n\r\t") => $this->yystack[ $this->yyidx +
                                                                                                  0 ]->minor);
    }

    #line 597 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r65()
    {
        $this->_retvalue = '\'' . $this->yystack[ $this->yyidx + 0 ]->minor . '\'';
    }

    #line 605 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r68()
    {
        $this->_retvalue =
            array($this->yystack[ $this->yyidx + -2 ]->minor => $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 617 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r70()
    {
        $this->yystack[ $this->yyidx + -2 ]->minor[] = $this->yystack[ $this->yyidx + 0 ]->minor;
        $this->_retvalue = $this->yystack[ $this->yyidx + -2 ]->minor;
    }

    #line 630 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r71()
    {
        $this->_retvalue = array('var' => '\'' . substr($this->yystack[ $this->yyidx + -2 ]->minor, 1) . '\'',
                                 'value' => $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 635 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r73()
    {
        $this->_retvalue = array('var' => $this->yystack[ $this->yyidx + -2 ]->minor,
                                 'value' => $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 642 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r77()
    {
        $this->_retvalue =
            '$_smarty_tpl->getStreamVariable(\'' . substr($this->yystack[ $this->yyidx + -2 ]->minor, 1) . '://' .
            $this->yystack[ $this->yyidx + 0 ]->minor . '\')';
    }

    #line 666 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r78()
    {
        $this->_retvalue =
            $this->yystack[ $this->yyidx + -2 ]->minor . trim($this->yystack[ $this->yyidx + -1 ]->minor) .
            $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 671 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r81()
    {
        $this->_retvalue = $this->compiler->compileTag('private_modifier',
                                                       array(),
                                                       array('value' => $this->yystack[ $this->yyidx + -1 ]->minor,
                                                             'modifierlist' => $this->yystack[ $this->yyidx +
                                                                                               0 ]->minor));
    }

    #line 685 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r82()
    {
        $this->_retvalue =
            $this->yystack[ $this->yyidx + -1 ]->minor['pre'] . $this->yystack[ $this->yyidx + -2 ]->minor .
            $this->yystack[ $this->yyidx + -1 ]->minor['op'] . $this->yystack[ $this->yyidx + 0 ]->minor . ')';
    }

    #line 691 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r83()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -2 ]->minor . $this->yystack[ $this->yyidx + -1 ]->minor .
                           $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 695 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r84()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + 0 ]->minor . $this->yystack[ $this->yyidx + -1 ]->minor . ')';
    }

    #line 699 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r85()
    {
        $this->_retvalue =
            'in_array(' . $this->yystack[ $this->yyidx + -2 ]->minor . ',' . $this->yystack[ $this->yyidx + 0 ]->minor .
            ')';
    }

    #line 703 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r86()
    {
        $this->_retvalue = 'in_array(' . $this->yystack[ $this->yyidx + -2 ]->minor . ',(array)' .
                           $this->yystack[ $this->yyidx + 0 ]->minor . ')';
    }

    #line 707 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r87()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -5 ]->minor . ' ? ' . $this->compiler->compileVariable('\'' .
                                                                                                                 substr($this->yystack[ $this->yyidx +
                                                                                                                                        -2 ]->minor,
                                                                                                                        1) .
                                                                                                                 '\'') .
                           ' : ' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 715 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r88()
    {
        $this->_retvalue =
            $this->yystack[ $this->yyidx + -5 ]->minor . ' ? ' . $this->yystack[ $this->yyidx + -2 ]->minor . ' : ' .
            $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 719 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r91()
    {
        $this->_retvalue = '!' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 734 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r96()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -2 ]->minor . '.' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 755 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r97()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -1 ]->minor . '.';
    }

    #line 759 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r98()
    {
        $this->_retvalue = '.' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 763 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r99()
    {
        if (defined($this->yystack[ $this->yyidx + 0 ]->minor)) {
            if ($this->security) {
                $this->security->isTrustedConstant($this->yystack[ $this->yyidx + 0 ]->minor, $this->compiler);
            }
            $this->_retvalue = $this->yystack[ $this->yyidx + 0 ]->minor;
        } else {
            $this->_retvalue = '\'' . $this->yystack[ $this->yyidx + 0 ]->minor . '\'';
        }
    }

    #line 768 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r101()
    {
        $this->_retvalue = "(" . $this->yystack[ $this->yyidx + -1 ]->minor . ")";
    }

    #line 785 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r102()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -2 ]->minor . $this->yystack[ $this->yyidx + -1 ]->minor .
                           $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 789 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r106()
    {
        $prefixVar = $this->compiler->getNewPrefixVariable();
        if ($this->yystack[ $this->yyidx + -2 ]->minor['var'] == '\'smarty\'') {
            $this->compiler->appendPrefixCode("<?php $prefixVar" . ' = ' .
                                              $this->compiler->compileTag('private_special_variable',
                                                                          array(),
                                                                          $this->yystack[ $this->yyidx +
                                                                                          -2 ]->minor['smarty_internal_index']) .
                                              ';?>');
        } else {
            $this->compiler->appendPrefixCode("<?php $prefixVar" . ' = ' .
                                              $this->compiler->compileVariable($this->yystack[ $this->yyidx +
                                                                                               -2 ]->minor['var']) .
                                              $this->yystack[ $this->yyidx + -2 ]->minor['smarty_internal_index'] .
                                              ';?>');
        }
        $this->_retvalue = $prefixVar . '::' . $this->yystack[ $this->yyidx + 0 ]->minor[0] .
                           $this->yystack[ $this->yyidx + 0 ]->minor[1];
    }

    #line 807 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r107()
    {
        $prefixVar = $this->compiler->getNewPrefixVariable();
        $tmp = $this->compiler->appendCode('<?php ob_start();?>', $this->yystack[ $this->yyidx + 0 ]->minor);
        $this->compiler->appendPrefixCode($this->compiler->appendCode($tmp, "<?php $prefixVar" . '=ob_get_clean();?>'));
        $this->_retvalue = $prefixVar;
    }

    #line 818 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r110()
    {
        if (!in_array(strtolower($this->yystack[ $this->yyidx + -2 ]->minor), array('self', 'parent')) &&
            (!$this->security || $this->security->isTrustedStaticClassAccess($this->yystack[ $this->yyidx + -2 ]->minor,
                                                                             $this->yystack[ $this->yyidx + 0 ]->minor,
                                                                             $this->compiler))) {
            if (isset($this->smarty->registered_classes[ $this->yystack[ $this->yyidx + -2 ]->minor ])) {
                $this->_retvalue =
                    $this->smarty->registered_classes[ $this->yystack[ $this->yyidx + -2 ]->minor ] . '::' .
                    $this->yystack[ $this->yyidx + 0 ]->minor[0] . $this->yystack[ $this->yyidx + 0 ]->minor[1];
            } else {
                $this->_retvalue =
                    $this->yystack[ $this->yyidx + -2 ]->minor . '::' . $this->yystack[ $this->yyidx + 0 ]->minor[0] .
                    $this->yystack[ $this->yyidx + 0 ]->minor[1];
            }
        } else {
            $this->compiler->trigger_template_error("static class '" . $this->yystack[ $this->yyidx + -2 ]->minor .
                                                    "' is undefined or not allowed by security setting");
        }
    }

    #line 835 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r112()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 854 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r113()
    {
        $this->_retvalue =
            $this->compiler->compileVariable('\'' . substr($this->yystack[ $this->yyidx + 0 ]->minor, 1) . '\'');
    }

    #line 865 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r114()
    {
        if ($this->yystack[ $this->yyidx + 0 ]->minor['var'] == '\'smarty\'') {
            $smarty_var = $this->compiler->compileTag('private_special_variable',
                                                      array(),
                                                      $this->yystack[ $this->yyidx +
                                                                      0 ]->minor['smarty_internal_index']);
            $this->_retvalue = $smarty_var;
        } else {
            // used for array reset,next,prev,end,current
            $this->last_variable = $this->yystack[ $this->yyidx + 0 ]->minor['var'];
            $this->last_index = $this->yystack[ $this->yyidx + 0 ]->minor['smarty_internal_index'];
            $this->_retvalue = $this->compiler->compileVariable($this->yystack[ $this->yyidx + 0 ]->minor['var']) .
                               $this->yystack[ $this->yyidx + 0 ]->minor['smarty_internal_index'];
        }
    }

    #line 868 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r115()
    {
        $this->_retvalue = '$_smarty_tpl->tpl_vars[' . $this->yystack[ $this->yyidx + -2 ]->minor . ']->' .
                           $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 881 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r117()
    {
        $this->_retvalue =
            $this->compiler->compileConfigVariable("'" . $this->yystack[ $this->yyidx + -1 ]->minor . "'");
    }

    #line 891 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r118()
    {
        $this->_retvalue = '(is_array($tmp = ' .
                           $this->compiler->compileConfigVariable("'" . $this->yystack[ $this->yyidx + -2 ]->minor .
                                                                  "'") . ') ? $tmp' .
                           $this->yystack[ $this->yyidx + 0 ]->minor . ' :null)';
    }

    #line 895 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r119()
    {
        $this->_retvalue = $this->compiler->compileConfigVariable($this->yystack[ $this->yyidx + -1 ]->minor);
    }

    #line 899 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r120()
    {
        $this->_retvalue =
            '(is_array($tmp = ' . $this->compiler->compileConfigVariable($this->yystack[ $this->yyidx + -2 ]->minor) .
            ') ? $tmp' . $this->yystack[ $this->yyidx + 0 ]->minor . ' : null)';
    }

    #line 903 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r121()
    {
        $this->_retvalue = array('var' => '\'' . substr($this->yystack[ $this->yyidx + -1 ]->minor, 1) . '\'',
                                 'smarty_internal_index' => $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 907 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r122()
    {
        $this->_retvalue = array('var' => $this->yystack[ $this->yyidx + -1 ]->minor,
                                 'smarty_internal_index' => $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 910 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r124()
    {
        return;
    }

    #line 923 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r125()
    {
        $this->_retvalue =
            '[' . $this->compiler->compileVariable('\'' . substr($this->yystack[ $this->yyidx + 0 ]->minor, 1) . '\'') .
            ']';
    }

    #line 929 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r126()
    {
        $this->_retvalue = '[' . $this->compiler->compileVariable($this->yystack[ $this->yyidx + 0 ]->minor) . ']';
    }

    #line 932 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r127()
    {
        $this->_retvalue = '[' . $this->compiler->compileVariable($this->yystack[ $this->yyidx + -2 ]->minor) . '->' .
                           $this->yystack[ $this->yyidx + 0 ]->minor . ']';
    }

    #line 936 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r128()
    {
        $this->_retvalue = "['" . $this->yystack[ $this->yyidx + 0 ]->minor . "']";
    }

    #line 940 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r129()
    {
        $this->_retvalue = '[' . $this->yystack[ $this->yyidx + 0 ]->minor . ']';
    }

    #line 944 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r130()
    {
        $this->_retvalue = '[' . $this->yystack[ $this->yyidx + -1 ]->minor . ']';
    }

    #line 949 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r131()
    {
        $this->_retvalue = '[' . $this->compiler->compileTag('private_special_variable',
                                                             array(),
                                                             '[\'section\'][\'' .
                                                             $this->yystack[ $this->yyidx + -1 ]->minor .
                                                             '\'][\'index\']') . ']';
    }

    #line 954 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r132()
    {
        $this->_retvalue = '[' . $this->compiler->compileTag('private_special_variable',
                                                             array(),
                                                             '[\'section\'][\'' .
                                                             $this->yystack[ $this->yyidx + -3 ]->minor . '\'][\'' .
                                                             $this->yystack[ $this->yyidx + -1 ]->minor . '\']') . ']';
    }

    #line 958 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r133()
    {
        $this->_retvalue = '[' . $this->yystack[ $this->yyidx + -1 ]->minor . ']';
    }

    #line 961 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r135()
    {
        $this->_retvalue = '[' . $this->compiler->compileVariable('\'' .
                                                                  substr($this->yystack[ $this->yyidx + -1 ]->minor,
                                                                         1) . '\'') . ']';;
    }

    #line 967 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r139()
    {
        $this->_retvalue = '[]';
    }

    #line 983 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r140()
    {
        $this->_retvalue = '\'' . substr($this->yystack[ $this->yyidx + 0 ]->minor, 1) . '\'';
    }

    #line 993 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r141()
    {
        $this->_retvalue = "''";
    }

    #line 997 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r142()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -1 ]->minor . '.' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 1002 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r144()
    {
        $var =
            trim(substr($this->yystack[ $this->yyidx + 0 ]->minor, $this->lex->ldel_length, -$this->lex->rdel_length),
                 ' $');
        $this->_retvalue = $this->compiler->compileVariable('\'' . $var . '\'');
    }

    #line 1010 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r145()
    {
        $this->_retvalue = '(' . $this->yystack[ $this->yyidx + -1 ]->minor . ')';
    }

    #line 1016 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r146()
    {
        if ($this->yystack[ $this->yyidx + -1 ]->minor['var'] == '\'smarty\'') {
            $this->_retvalue = $this->compiler->compileTag('private_special_variable',
                                                           array(),
                                                           $this->yystack[ $this->yyidx +
                                                                           -1 ]->minor['smarty_internal_index']) .
                               $this->yystack[ $this->yyidx + 0 ]->minor;
        } else {
            $this->_retvalue = $this->compiler->compileVariable($this->yystack[ $this->yyidx + -1 ]->minor['var']) .
                               $this->yystack[ $this->yyidx + -1 ]->minor['smarty_internal_index'] .
                               $this->yystack[ $this->yyidx + 0 ]->minor;
        }
    }

    #line 1023 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r147()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 1032 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r148()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -1 ]->minor . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 1037 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r149()
    {
        if ($this->security && substr($this->yystack[ $this->yyidx + -1 ]->minor, 0, 1) == '_') {
            $this->compiler->trigger_template_error(self::Err1);
        }
        $this->_retvalue =
            '->' . $this->yystack[ $this->yyidx + -1 ]->minor . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 1042 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r150()
    {
        if ($this->security) {
            $this->compiler->trigger_template_error(self::Err2);
        }
        $this->_retvalue = '->{' . $this->compiler->compileVariable($this->yystack[ $this->yyidx + -1 ]->minor) .
                           $this->yystack[ $this->yyidx + 0 ]->minor . '}';
    }

    #line 1049 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r151()
    {
        if ($this->security) {
            $this->compiler->trigger_template_error(self::Err2);
        }
        $this->_retvalue =
            '->{' . $this->yystack[ $this->yyidx + -2 ]->minor . $this->yystack[ $this->yyidx + 0 ]->minor . '}';
    }

    #line 1056 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r152()
    {
        if ($this->security) {
            $this->compiler->trigger_template_error(self::Err2);
        }
        $this->_retvalue =
            '->{\'' . $this->yystack[ $this->yyidx + -4 ]->minor . '\'.' . $this->yystack[ $this->yyidx + -2 ]->minor .
            $this->yystack[ $this->yyidx + 0 ]->minor . '}';
    }

    #line 1063 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r153()
    {
        $this->_retvalue = '->' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 1071 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r154()
    {
        $this->_retvalue = $this->compiler->compilePHPFunctionCall($this->yystack[ $this->yyidx + -3 ]->minor,
                                                                   $this->yystack[ $this->yyidx + -1 ]->minor);
    }

    #line 1079 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r155()
    {
        if ($this->security && substr($this->yystack[ $this->yyidx + -3 ]->minor, 0, 1) == '_') {
            $this->compiler->trigger_template_error(self::Err1);
        }
        $this->_retvalue = $this->yystack[ $this->yyidx + -3 ]->minor . "(" .
                           implode(',', $this->yystack[ $this->yyidx + -1 ]->minor) . ")";
    }

    #line 1087 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r156()
    {
        if ($this->security) {
            $this->compiler->trigger_template_error(self::Err2);
        }
        $prefixVar = $this->compiler->getNewPrefixVariable();
        $this->compiler->appendPrefixCode("<?php $prefixVar" . '=' . $this->compiler->compileVariable('\'' .
                                                                                                      substr($this->yystack[ $this->yyidx +
                                                                                                                             -3 ]->minor,
                                                                                                             1) .
                                                                                                      '\'') . ';?>');
        $this->_retvalue = $prefixVar . '(' . implode(',', $this->yystack[ $this->yyidx + -1 ]->minor) . ')';
    }

    #line 1094 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r157()
    {
        $this->_retvalue =
            array_merge($this->yystack[ $this->yyidx + -2 ]->minor, array($this->yystack[ $this->yyidx + 0 ]->minor));
    }

    #line 1105 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r160()
    {
        $this->_retvalue = array_merge($this->yystack[ $this->yyidx + -2 ]->minor,
                                       array(array_merge($this->yystack[ $this->yyidx + -1 ]->minor,
                                                         $this->yystack[ $this->yyidx + 0 ]->minor)));
    }

    #line 1122 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r161()
    {
        $this->_retvalue =
            array(array_merge($this->yystack[ $this->yyidx + -1 ]->minor, $this->yystack[ $this->yyidx + 0 ]->minor));
    }

    #line 1126 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r163()
    {
        $this->_retvalue = array($this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 1134 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r164()
    {
        $this->_retvalue =
            array_merge($this->yystack[ $this->yyidx + -1 ]->minor, $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 1142 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r168()
    {
        $this->_retvalue = array($this->yystack[ $this->yyidx + 0 ]->minor, '', 'method');
    }

    #line 1161 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r169()
    {
        $this->_retvalue =
            array($this->yystack[ $this->yyidx + -1 ]->minor, $this->yystack[ $this->yyidx + 0 ]->minor, 'method');
    }

    #line 1166 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r170()
    {
        $this->_retvalue = array($this->yystack[ $this->yyidx + 0 ]->minor, '');
    }

    #line 1171 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r171()
    {
        $this->_retvalue =
            array($this->yystack[ $this->yyidx + -1 ]->minor, $this->yystack[ $this->yyidx + 0 ]->minor, 'property');
    }

    #line 1176 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r172()
    {
        $this->_retvalue = array($this->yystack[ $this->yyidx + -2 ]->minor,
                                 $this->yystack[ $this->yyidx + -1 ]->minor . $this->yystack[ $this->yyidx + 0 ]->minor,
                                 'property');
    }

    #line 1181 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r173()
    {
        $this->_retvalue = ' ' . trim($this->yystack[ $this->yyidx + 0 ]->minor) . ' ';
    }

    #line 1187 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r174()
    {
        static $lops =
            array('eq' => ' == ', 'ne' => ' != ', 'neq' => ' != ', 'gt' => ' > ', 'ge' => ' >= ', 'gte' => ' >= ',
                  'lt' => ' < ', 'le' => ' <= ', 'lte' => ' <= ', 'mod' => ' % ', 'and' => ' && ', 'or' => ' || ',
                  'xor' => ' xor ',);
        $op = strtolower(preg_replace('/\s*/', '', $this->yystack[ $this->yyidx + 0 ]->minor));
        $this->_retvalue = $lops[ $op ];
    }

    #line 1191 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r175()
    {
        static $tlops =
            array('isdivby' => array('op' => ' % ', 'pre' => '!('), 'isnotdivby' => array('op' => ' % ', 'pre' => '('),
                  'isevenby' => array('op' => ' / ', 'pre' => '!(1 & '),
                  'isnotevenby' => array('op' => ' / ', 'pre' => '(1 & '),
                  'isoddby' => array('op' => ' / ', 'pre' => '(1 & '),
                  'isnotoddby' => array('op' => ' / ', 'pre' => '!(1 & '),);
        $op = strtolower(preg_replace('/\s*/', '', $this->yystack[ $this->yyidx + 0 ]->minor));
        $this->_retvalue = $tlops[ $op ];
    }

    #line 1210 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r176()
    {
        static $scond =
            array('iseven' => '!(1 & ', 'isnoteven' => '(1 & ', 'isodd' => '(1 & ', 'isnotodd' => '!(1 & ',);
        $op = strtolower(str_replace(' ', '', $this->yystack[ $this->yyidx + 0 ]->minor));
        $this->_retvalue = $scond[ $op ];
    }

    #line 1223 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r177()
    {
        $this->_retvalue = 'array(' . $this->yystack[ $this->yyidx + -1 ]->minor . ')';
    }

    #line 1237 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r179()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -2 ]->minor . ',' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 1245 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r181()
    {
        $this->_retvalue =
            $this->yystack[ $this->yyidx + -2 ]->minor . '=>' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 1253 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r182()
    {
        $this->_retvalue =
            '\'' . $this->yystack[ $this->yyidx + -2 ]->minor . '\'=>' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 1257 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r185()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -1 ]->minor->to_smarty_php($this);
    }

    #line 1273 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r186()
    {
        $this->yystack[ $this->yyidx + -1 ]->minor->append_subtree($this, $this->yystack[ $this->yyidx + 0 ]->minor);
        $this->_retvalue = $this->yystack[ $this->yyidx + -1 ]->minor;
    }

    #line 1278 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r187()
    {
        $this->_retvalue = new Smarty_Internal_ParseTree_Dq($this, $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 1283 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r188()
    {
        $this->_retvalue = new Smarty_Internal_ParseTree_Code('(string)' . $this->yystack[ $this->yyidx + -1 ]->minor);
    }

    #line 1287 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r190()
    {
        $this->_retvalue = new Smarty_Internal_ParseTree_Code('(string)$_smarty_tpl->tpl_vars[\'' .
                                                              substr($this->yystack[ $this->yyidx + 0 ]->minor, 1) .
                                                              '\']->value');
    }

    #line 1295 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r192()
    {
        $this->_retvalue =
            new Smarty_Internal_ParseTree_Code('(string)(' . $this->yystack[ $this->yyidx + -1 ]->minor . ')');
    }

    #line 1303 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r193()
    {
        $this->_retvalue = new Smarty_Internal_ParseTree_Tag($this, $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 1307 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r194()
    {
        $this->_retvalue = new Smarty_Internal_ParseTree_DqContent($this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 1311 "../smarty/lexer/smarty_internal_templateparser.y"

    public function doParse($yymajor, $yytokenvalue)
    {
        $yyerrorhit = 0;   /* True if yymajor has invoked an error */

        if ($this->yyidx === null || $this->yyidx < 0) {
            $this->yyidx = 0;
            $this->yyerrcnt = -1;
            $x = new TP_yyStackEntry;
            $x->stateno = 0;
            $x->major = 0;
            $this->yystack = array();
            $this->yystack[] = $x;
        }
        $yyendofinput = ($yymajor == 0);

        if ($this->yyTraceFILE) {
            fprintf($this->yyTraceFILE,
                    "%sInput %s\n",
                    $this->yyTracePrompt,
                    $this->yyTokenName[ $yymajor ]);
        }

        do {
            $yyact = $this->yy_find_shift_action($yymajor);
            if ($yymajor < self::YYERRORSYMBOL && !$this->yy_is_expected_token($yymajor)) {
                // force a syntax error
                $yyact = self::YY_ERROR_ACTION;
            }
            if ($yyact < self::YYNSTATE) {
                $this->yy_shift($yyact, $yymajor, $yytokenvalue);
                $this->yyerrcnt--;
                if ($yyendofinput && $this->yyidx >= 0) {
                    $yymajor = 0;
                } else {
                    $yymajor = self::YYNOCODE;
                }
            } else if ($yyact < self::YYNSTATE + self::YYNRULE) {
                $this->yy_reduce($yyact - self::YYNSTATE);
            } else if ($yyact == self::YY_ERROR_ACTION) {
                if ($this->yyTraceFILE) {
                    fprintf($this->yyTraceFILE,
                            "%sSyntax Error!\n",
                            $this->yyTracePrompt);
                }
                if (self::YYERRORSYMBOL) {
                    if ($this->yyerrcnt < 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $yymx = $this->yystack[ $this->yyidx ]->major;
                    if ($yymx == self::YYERRORSYMBOL || $yyerrorhit) {
                        if ($this->yyTraceFILE) {
                            fprintf($this->yyTraceFILE,
                                    "%sDiscard input token %s\n",
                                    $this->yyTracePrompt,
                                    $this->yyTokenName[ $yymajor ]);
                        }
                        $this->yy_destructor($yymajor, $yytokenvalue);
                        $yymajor = self::YYNOCODE;
                    } else {
                        while ($this->yyidx >= 0 && $yymx != self::YYERRORSYMBOL &&
                               ($yyact = $this->yy_find_shift_action(self::YYERRORSYMBOL)) >= self::YYNSTATE) {
                            $this->yy_pop_parser_stack();
                        }
                        if ($this->yyidx < 0 || $yymajor == 0) {
                            $this->yy_destructor($yymajor, $yytokenvalue);
                            $this->yy_parse_failed();
                            $yymajor = self::YYNOCODE;
                        } else if ($yymx != self::YYERRORSYMBOL) {
                            $u2 = 0;
                            $this->yy_shift($yyact, self::YYERRORSYMBOL, $u2);
                        }
                    }
                    $this->yyerrcnt = 3;
                    $yyerrorhit = 1;
                } else {
                    if ($this->yyerrcnt <= 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $this->yyerrcnt = 3;
                    $this->yy_destructor($yymajor, $yytokenvalue);
                    if ($yyendofinput) {
                        $this->yy_parse_failed();
                    }
                    $yymajor = self::YYNOCODE;
                }
            } else {
                $this->yy_accept();
                $yymajor = self::YYNOCODE;
            }
        } while ($yymajor != self::YYNOCODE && $this->yyidx >= 0);
    }

    public function yy_is_expected_token($token)
    {
        static $res = array();
        static $res2 = array();
        if ($token === 0) {
            return true; // 0 is not part of this
        }
        $state = $this->yystack[ $this->yyidx ]->stateno;
        if (isset($res[ $state ][ $token ])) {
            if ($res[ $state ][ $token ]) {
                return true;
            }
        } else {
            if ($res[ $state ][ $token ] = in_array($token, self::$yyExpectedTokens[ $state ], true)) {
                return true;
            }
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return true;
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[ $yyruleno ][1];
                    $nextstate = $this->yy_find_reduce_action($this->yystack[ $this->yyidx ]->stateno,
                                                              self::$yyRuleInfo[ $yyruleno ][0]);
                    if (isset($res2[ $nextstate ][ $token ])) {
                        if ($res2[ $nextstate ][ $token ]) {
                            $this->yyidx = $yyidx;
                            $this->yystack = $stack;
                            return true;
                        }
                    } else {
                        if ($res2[ $nextstate ][ $token ] = (isset(self::$yyExpectedTokens[ $nextstate ]) &&
                                                             in_array($token,
                                                                      self::$yyExpectedTokens[ $nextstate ],
                                                                      true))) {
                            $this->yyidx = $yyidx;
                            $this->yystack = $stack;
                            return true;
                        }
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[ $yyruleno ][0];
                        $this->yystack[ $this->yyidx ] = $x;
                        continue 2;
                    } else if ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        if (!$token) {
                            // end of input: this is valid
                            return true;
                        }
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return false;
                    } else if ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return true;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        $this->yyidx = $yyidx;
        $this->yystack = $stack;

        return true;
    }

    public function yy_shift($yyNewState, $yyMajor, $yypMinor)
    {
        $this->yyidx++;
        if ($this->yyidx >= self::YYSTACKDEPTH) {
            $this->yyidx--;
            if ($this->yyTraceFILE) {
                fprintf($this->yyTraceFILE, "%sStack Overflow!\n", $this->yyTracePrompt);
            }
            while ($this->yyidx >= 0) {
                $this->yy_pop_parser_stack();
            }
            #line 207 "../smarty/lexer/smarty_internal_templateparser.y"

            $this->internalError = true;
            $this->compiler->trigger_template_error("Stack overflow in template parser");

            return;
        }
        $yytos = new TP_yyStackEntry;
        $yytos->stateno = $yyNewState;
        $yytos->major = $yyMajor;
        $yytos->minor = $yypMinor;
        $this->yystack[] = $yytos;
        if ($this->yyTraceFILE && $this->yyidx > 0) {
            fprintf($this->yyTraceFILE,
                    "%sShift %d\n",
                    $this->yyTracePrompt,
                    $yyNewState);
            fprintf($this->yyTraceFILE, "%sStack:", $this->yyTracePrompt);
            for ($i = 1; $i <= $this->yyidx; $i++) {
                fprintf($this->yyTraceFILE,
                        " %s",
                        $this->yyTokenName[ $this->yystack[ $i ]->major ]);
            }
            fwrite($this->yyTraceFILE, "\n");
        }
    }

    public function yy_reduce($yyruleno)
    {
        if ($this->yyTraceFILE && $yyruleno >= 0 && $yyruleno < count(self::$yyRuleName)) {
            fprintf($this->yyTraceFILE,
                    "%sReduce (%d) [%s].\n",
                    $this->yyTracePrompt,
                    $yyruleno,
                    self::$yyRuleName[ $yyruleno ]);
        }

        $this->_retvalue = $yy_lefthand_side = null;
        if (isset(self::$yyReduceMap[ $yyruleno ])) {
            // call the action
            $this->_retvalue = null;
            $this->{'yy_r' . self::$yyReduceMap[ $yyruleno ]}();
            $yy_lefthand_side = $this->_retvalue;
        }
        $yygoto = self::$yyRuleInfo[ $yyruleno ][0];
        $yysize = self::$yyRuleInfo[ $yyruleno ][1];
        $this->yyidx -= $yysize;
        for ($i = $yysize; $i; $i--) {
            // pop all of the right-hand side parameters
            array_pop($this->yystack);
        }
        $yyact = $this->yy_find_reduce_action($this->yystack[ $this->yyidx ]->stateno, $yygoto);
        if ($yyact < self::YYNSTATE) {
            if (!$this->yyTraceFILE && $yysize) {
                $this->yyidx++;
                $x = new TP_yyStackEntry;
                $x->stateno = $yyact;
                $x->major = $yygoto;
                $x->minor = $yy_lefthand_side;
                $this->yystack[ $this->yyidx ] = $x;
            } else {
                $this->yy_shift($yyact, $yygoto, $yy_lefthand_side);
            }
        } else if ($yyact == self::YYNSTATE + self::YYNRULE + 1) {
            $this->yy_accept();
        }
    }

    public function yy_accept()
    {
        if ($this->yyTraceFILE) {
            fprintf($this->yyTraceFILE, "%sAccept!\n", $this->yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
        #line 193 "../smarty/lexer/smarty_internal_templateparser.y"

        $this->successful = !$this->internalError;
        $this->internalError = false;
        $this->retvalue = $this->_retvalue;
    }

    public function yy_syntax_error($yymajor, $TOKEN)
    {
        #line 200 "../smarty/lexer/smarty_internal_templateparser.y"

        $this->internalError = true;
        $this->yymajor = $yymajor;
        $this->compiler->trigger_template_error();
    }

    public function yy_parse_failed()
    {
        if ($this->yyTraceFILE) {
            fprintf($this->yyTraceFILE, "%sFail!\n", $this->yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
    }
}

